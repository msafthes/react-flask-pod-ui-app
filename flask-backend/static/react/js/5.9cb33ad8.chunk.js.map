{"version":3,"sources":["components/UI/LoadingIndicator/LoadingIndicator.tsx","components/UI/LoadingIndicator/LoadingIndicator.module.css","helpers/helpers.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","pages/Containers/Containers.module.css","../node_modules/@material-ui/icons/Pageview.js","components/MaterialCustomized/MenuContainers.tsx","pages/Containers/Containers.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1__","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1___default","LoadingIndicator","a","createElement","className","css","Loading_Indicator","module","exports","isAllTrue","obj","_i","_Object$entries","Object","entries","length","_ref3","_ref2","_home_thesis_thesis_master_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","handleSelectAll","selectedItems","allTrue","updated","_home_thesis_thesis_master_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_i2","_Object$entries2","_ref6","_ref5","key","toggleSelectAll","isSelectedAny","_i3","_Object$entries3","_ref9","_ref8","extractIds","items","imageIds","_i5","_Object$entries5","_ref15","_ref14","push","extractSelected","_i6","_Object$entries6","_ref18","_ref17","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","_defaultTheme__WEBPACK_IMPORTED_MODULE_2__","stylesOrCreator","options","arguments","undefined","defaultTheme","Containers","Wrapper","Info","Content","Buttons","Heading","ContainerId","Status","Image","Command","Created","Ports","Names","Button","DetailTitle","Headline","Error","_interopRequireDefault","defineProperty","value","default","_react","_default","MenuContainers","props","containerId","containerOperation","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","id","handleClose","react_default","variant","color","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","react_router_dom","to","concat","style","textDecoration","marginLeft","startIcon","Pageview_default","console","log","MenuItem","connect","state","containers","loading","errorContainers","error","dispatch","fetchContainers","actions","removeContainers","selectedContainers","stopContainers","killContainers","containerRun","command","_useViewport","useViewport","phone","width","tabletLandscape","tabletPortrait","desktop","defaultSelectedContainers","objectSpread","setSelectedContainers","_useState3","_useState4","openRunModal","setOpenRunModal","_useState5","_useState6","runCommand","setRunCommand","_useState7","_useState8","showError","setShowError","_useState9","_useState10","showBackendError","setShowBackendError","_useState11","_useState12","errorInfo","setErrorInfo","useEffect","newSelected","handleCheckboxChange","changeEvent","target","old","handleContainerOperation","mode","containerIds","toLowerCase","runningContainersIds","forEach","container","status","startsWith","toConsumableArray","Set","join","handleRemoveContainers","_i4","_Object$entries4","_ref12","_ref11","isSelected","containersTitleClasses","content","makeStyles","buttonGroup","alignSelf","useStyles","Grid","direction","map","Fragment","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-label","FormControlLabel","stopPropagation","onFocus","control","Checkbox","onChange","checked","label","item","Tooltip","title","image","ports","MaterialCustomized_MenuContainers","AccordionDetails","names","created","disabled","Delete_default","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","type","fullWidth","e","DialogActions","Alert","severity","AlertTitle","split","Typography","component","align"],"mappings":"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","file":"js/5.9cb33ad8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport css from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator = () => (\r\n    <div className={css.Loading_Indicator}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading_Indicator\":\"LoadingIndicator_Loading_Indicator__1Yf4m\"};","// Sets all properties of an object to FALSE\nexport const isAllTrue = (obj: Object) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (value === false) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const toggleSelectAll = (obj: Object, allTrue: Boolean) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (allTrue) {\n            obj[key] = false\n        } else {\n            obj[key] = true\n        }\n    }\n};\n\nexport const handleSelectAll = (selectedItems: Object) => {\n    const allTrue = isAllTrue(selectedItems);\n    const updated = { ...selectedItems };\n    toggleSelectAll(updated, allTrue);\n\n    return updated\n};\n\nexport const isSelectedAny = (selectedItems: Object) => {\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            return true\n        }\n    }\n    return false;\n};\n\nexport const isSelectedOne = (selectedItems: Object) => {\n    let count = 0;\n\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            count++;\n        }\n    }\n\n    return count === 1;\n};\n\nexport const extractIds = (items: Object) => {\n    const imageIds = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            imageIds.push(key);\n        }\n    }\n    return imageIds;\n};\n\nexport const extractSelected = (items) => {\n    const selectedItems = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            selectedItems.push(key);\n        }\n    }\n    return selectedItems;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Containers\":\"Containers_Containers__d7bZ0\",\"Wrapper\":\"Containers_Wrapper__2YZ7O\",\"Info\":\"Containers_Info__3wfoH\",\"Content\":\"Containers_Content__kro1u\",\"Buttons\":\"Containers_Buttons__gccNo\",\"Heading\":\"Containers_Heading__3Mvbc\",\"ContainerId\":\"Containers_ContainerId__WrAih\",\"Status\":\"Containers_Status__1wqQz\",\"Image\":\"Containers_Image__3csfy\",\"Command\":\"Containers_Command__24ulJ\",\"Created\":\"Containers_Created__1zkLf\",\"Ports\":\"Containers_Ports__1O1FV\",\"Names\":\"Containers_Names__2Xmjn\",\"Button\":\"Containers_Button__1usmy\",\"DetailTitle\":\"Containers_DetailTitle__jyW3t\",\"Headline\":\"Containers_Headline__3rbEl\",\"Error\":\"Containers_Error__18sUr\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\"\n}), 'Pageview');\n\nexports.default = _default;","import React, { useState } from 'react';\n\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { Link } from 'react-router-dom';\n\n\nconst MenuContainers = props => {\n    const { containerId, containerOperation } = props\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const id = {};\n    id[containerId] = true;\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"secondary\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Actions\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <Link to={`/container_logs/${containerId}`} style={{ textDecoration: 'none', marginLeft: '2.5%' }}>\n                    <Button\n                        startIcon={<PageviewIcon />}\n                        onClick={() => console.log(`clicked ID: ${containerId}`)}>\n                        Show Logs\n                    </Button>\n                </Link>\n                <MenuItem onClick={() => containerOperation(id, \"remove\")}>Remove</MenuItem>\n                <MenuItem onClick={() => containerOperation(id, \"stop\")}>Stop</MenuItem>\n                <MenuItem onClick={() => containerOperation(id, \"kill\")}>Kill</MenuItem>\n                <MenuItem onClick={handleClose}>Close</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n\nexport default MenuContainers;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport * as actions from '../../store/actions/index';\nimport { AppState } from '../../store';\n\nimport css from './Containers.module.css';\nimport LoadingIndicator from '../../components/UI/LoadingIndicator/LoadingIndicator';\nimport MenuContainers from '../../components/MaterialCustomized/MenuContainers';\n\nimport { Container } from '../../models/Models';\nimport { isAllTrue, handleSelectAll, isSelectedAny, extractSelected } from '../../helpers/helpers';\nimport { useViewport } from '../../Viewport';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Typography } from '@material-ui/core';\n\n\ninterface IContainersProps {\n    containers: Container[],\n    errorContainers: string,\n    loading: boolean,\n    fetchContainers: Function,\n    removeContainers: Function,\n    stopContainers: Function,\n    killContainers: Function,\n    containerRun: Function,\n\n    containersDataTest: Container[]\n}\n\nconst Containers = (props: IContainersProps) => {\n    const { fetchContainers, removeContainers, stopContainers, killContainers, containerRun, containers, errorContainers, loading } = props;\n    const { width, phone, tabletPortrait, tabletLandscape, desktop } = useViewport();\n\n    const defaultSelectedContainers = {};\n\n    for (const [key, value] of Object.entries(containers)) {\n        defaultSelectedContainers[value.containerId] = false\n    }\n\n    const [selectedContainers, setSelectedContainers] = useState<any>({ ...defaultSelectedContainers });\n    const [openRunModal, setOpenRunModal] = useState(false);\n    const [runCommand, setRunCommand] = useState(\"\");\n    const [showError, setShowError] = useState<boolean>(false);\n    const [showBackendError, setShowBackendError] = useState<boolean>(false);\n    const [errorInfo, setErrorInfo] = useState<string>(\"\");\n\n    const allTrue = isAllTrue(selectedContainers);\n\n    useEffect(() => {\n        fetchContainers();\n    }, [fetchContainers]);\n\n    useEffect(() => {\n        const newSelected = {};\n        for (const [key, value] of Object.entries(containers)) {\n            newSelected[value.containerId] = false\n        }\n        setSelectedContainers({ ...newSelected });\n    }, [containers]);\n\n    useEffect(() => {\n        setShowBackendError(errorContainers.length > 0);\n    }, [errorContainers]);\n\n    const handleRunOpen = () => {\n        setOpenRunModal(true);\n    };\n\n    const handleRunClose = () => {\n        setOpenRunModal(false);\n    };\n\n    const onChangeRun = (e) => {\n        setRunCommand(e.target.value);\n    };\n\n    const handleContainerRun = () => {\n        setOpenRunModal(false);\n        if (runCommand.length == 0) {\n            return;\n        }\n        containerRun(runCommand);\n        setRunCommand('');\n    };\n\n    const handleCheckboxChange = changeEvent => {\n        const { id } = changeEvent.target;\n        const old = { ...selectedContainers };\n\n        for (const [key, value] of Object.entries(old)) {\n            if (id === key) {\n                old[key] = !old[key];\n            }\n        }\n\n        setSelectedContainers(old);\n    };\n\n    const handleRemoveContainers = (selectedContainers, containerIds) => {\n        // console.log(\"handleRemoveContainers()\");\n        let runningContainersIds = [];\n        containers.forEach((container) => {\n            if ((selectedContainers[container.containerId] === true) && (container.status.startsWith('Up '))) {\n                runningContainersIds.push(container.containerId);\n            }\n        });\n\n        if (runningContainersIds.length > 0) {\n            setShowError(true);\n            runningContainersIds = [...new Set(runningContainersIds)];\n            setErrorInfo(runningContainersIds.join(\" \"));\n        } else {\n            removeContainers(containerIds);\n        }\n    };\n\n    // Function to handle various container operations, ready to be used for \"all\" containers as well\n    const handleContainerOperation = (selectedContainers, mode: string) => {\n        // console.log(`triggered handleContainerOperation(), mode: ${mode}`);\n        const containerIds = extractSelected(selectedContainers);\n\n        switch (mode.toLowerCase()) {\n            case \"remove\":\n                handleRemoveContainers(selectedContainers, containerIds);\n                break;\n            case \"stop\":\n                stopContainers(containerIds);\n                break;\n            case \"kill\":\n                killContainers(containerIds);\n                break;\n            default: console.log(\"Unknown operation!\");\n        }\n\n        const updated = { ...selectedContainers };\n\n        for (const [key, value] of Object.entries(updated)) {\n            if (value === true) {\n                updated[key] = false\n            }\n        }\n\n        setSelectedContainers(updated);\n    };\n\n    const selectAll = () => {\n        const updated = handleSelectAll(selectedContainers);\n        setSelectedContainers(updated);\n    };\n\n    const isSelected = isSelectedAny(selectedContainers);\n\n    const containersTitleClasses = [css.Content, css.Heading];\n    const useStyles = makeStyles({\n        buttonGroup: {\n            alignSelf: \"flex-start\"\n        }\n    });\n    const classes = useStyles();\n\n    let content = <div className={css.Wrapper}><LoadingIndicator /></div>\n\n    if (containers) {\n        content = <Grid container direction=\"column\">\n            {(containers && containers.length) ?\n                (containers.map((container, i) => {\n                    return <React.Fragment key={container.containerId}>\n\n                        <Accordion>\n\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                            >\n                                <FormControlLabel\n                                    aria-label=\"Acknowledge\"\n                                    onClick={(event) => event.stopPropagation()}\n                                    onFocus={(event) => event.stopPropagation()}\n                                    control={<Checkbox\n                                        color=\"primary\"\n                                        onChange={handleCheckboxChange}\n                                        id={container.containerId}\n                                        checked={selectedContainers[container.containerId] || false} />}\n                                    label=\"\"\n                                />\n                                <Grid item container className={css.Content}>\n                                    <Tooltip title={container.containerId}>\n                                        <Grid className={css.ContainerId}>{container.containerId}</Grid>\n                                    </Tooltip>\n                                    {(desktop || tabletLandscape) &&\n                                        <Tooltip title={container.status}>\n                                            <Grid className={css.Status}>{container.status}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {!phone &&\n                                        <Tooltip title={container.image}>\n                                            <Grid className={css.Image}>{container.image}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {desktop &&\n                                        <Tooltip title={container.ports}>\n                                            <Grid className={css.Ports}>{container.ports}</Grid>\n                                        </Tooltip>\n                                    }\n\n                                    <FormControlLabel\n                                        aria-label=\"Acknowledge\"\n                                        onClick={(event) => event.stopPropagation()}\n                                        onFocus={(event) => event.stopPropagation()}\n                                        control={<MenuContainers\n                                            containerId={container.containerId}\n                                            containerOperation={handleContainerOperation}\n                                        />}\n                                        label=\"\"\n                                    />\n                                </Grid>\n                            </AccordionSummary>\n\n                            <AccordionDetails>\n                                <Grid container direction=\"column\">\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Names:</Grid>\n                                        <Grid className={css.Names}>{container.names}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Created:</Grid>\n                                        <Grid className={css.Created}>{container.created}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Command:</Grid>\n                                        <Grid className={css.Command}>{container.command}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Ports:</Grid>\n                                        <Grid className={css.Ports}>{container.ports}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Image:</Grid>\n                                        <Grid className={css.Image}>{container.image}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Status:</Grid>\n                                        <Grid className={css.Status}>{container.status}</Grid>\n                                    </Grid>\n                                </Grid>\n\n                            </AccordionDetails>\n\n                        </Accordion>\n\n                    </React.Fragment>\n\n                }))\n                :\n                ''\n            }\n        </Grid>\n    }\n\n    return (\n        <div className={css.Containers}>\n            <div className={css.Wrapper}>\n                <h1 className={css.Headline}>Podman Containers</h1>\n                <p>Showing information about Containers and offering various operations with them</p>\n                <Grid container className={css.Buttons}>\n                    <Grid item className={css.Button}>\n                        <Button\n                            disabled={!isSelected}\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            startIcon={<DeleteIcon />}\n                            onClick={() => handleContainerOperation(selectedContainers, \"remove\")}>\n                            Remove Selected\n                        </Button>\n                    </Grid>\n                    <Grid item className={css.Button}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleRunOpen}>\n                            Run\n                        </Button>\n                        <Dialog open={openRunModal} onClose={handleRunClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">Run</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Enter the command for \"podman run\"\n                            </DialogContentText>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Podman Run\"\n                                    type=\"text\"\n                                    fullWidth\n                                    onChange={onChangeRun}\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleContainerRun} color=\"primary\">\n                                    Run\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n\n                    {loading && <LoadingIndicator />}\n\n                </Grid>\n\n                {showError &&\n                    <Alert severity=\"error\" onClose={() => { setShowError(!showError) }}>\n                        <AlertTitle><strong>Error</strong></AlertTitle>\n                        The following containers are running and cannot be removed:\n                        {(errorInfo.length > 0) ?\n                            (errorInfo.split(' ').map((id, i) => {\n                                return <Typography key={id} variant=\"body1\" component=\"div\" align=\"left\">\n                                    <strong>container: {id}</strong><strong></strong>\n                                </Typography>\n                            }))\n                            :\n                            ''\n                        }\n                    </Alert>\n                }\n\n                {showBackendError &&\n                    <Alert severity=\"error\" onClose={() => { setShowBackendError(!showBackendError) }}>\n                        <AlertTitle><strong>Backend Error</strong></AlertTitle>\n                        {errorContainers.length > 0 &&\n                            <p className={css.Error}>{errorContainers}</p>\n                        }\n                    </Alert>\n                }\n\n                <div className={css.Info}>\n                    <div className={containersTitleClasses.join(' ')}>\n                        <Checkbox\n                            color=\"primary\"\n                            onChange={selectAll}\n                            checked={allTrue || false} />\n                        <div className={css.ContainerId}>ID</div>\n                        {(desktop || tabletLandscape) &&\n                            <div className={css.Status}>Status</div>\n                        }\n                        {!phone &&\n                            <div className={css.Image}>Image</div>\n                        }\n                        {desktop &&\n                            <div className={css.Ports}>Ports</div>\n                        }\n                    </div>\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        containers: state.containers.containers,\n        loading: state.containers.loading,\n        errorContainers: state.containers.error,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    return {\n        fetchContainers: () =>\n            dispatch(actions.fetchContainers()),\n        removeContainers: (selectedContainers) =>\n            dispatch(actions.removeContainers(selectedContainers)),\n        stopContainers: (selectedContainers) =>\n            dispatch(actions.stopContainers(selectedContainers)),\n        killContainers: (selectedContainers) =>\n            dispatch(actions.killContainers(selectedContainers)),\n        containerRun: (command) =>\n            dispatch(actions.containerRun(command))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Containers);\n"],"sourceRoot":""}