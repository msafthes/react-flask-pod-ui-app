{"version":3,"sources":["components/UI/LoadingIndicator/LoadingIndicator.tsx","components/UI/LoadingIndicator/LoadingIndicator.module.css","helpers/helpers.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/Images/Images.module.css","../node_modules/@material-ui/core/esm/styles/makeStyles.js","components/MaterialCustomized/MenuImages.tsx","pages/Images/Images.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1__","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1___default","LoadingIndicator","a","createElement","className","css","Loading_Indicator","module","exports","isAllTrue","obj","_i","_Object$entries","Object","entries","length","_ref3","_ref2","_home_thesis_thesis_master_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","handleSelectAll","selectedItems","allTrue","updated","_home_thesis_thesis_master_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_i2","_Object$entries2","_ref6","_ref5","key","toggleSelectAll","isSelectedAny","_i3","_Object$entries3","_ref9","_ref8","extractIds","items","imageIds","_i5","_Object$entries5","_ref15","_ref14","push","extractSelected","_i6","_Object$entries6","_ref18","_ref17","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__","Images","Wrapper","Info","Content","Buttons","Heading","Repository","Tag","Id","Created","Size","Button","Headline","DetailTitle","Error","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","_defaultTheme__WEBPACK_IMPORTED_MODULE_2__","stylesOrCreator","options","arguments","undefined","defaultTheme","MenuImages","props","imageId","imageOperation","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","id","handleClose","react_default","variant","color","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","connect","state","images","containers","errorImages","error","errorContainers","dispatch","fetchImages","actions","removeImages","selectedImages","pruneImages","pullImage","name","fetchContainers","_useViewport","useViewport","phone","width","tabletLandscape","tabletPortrait","desktop","defaultSelectedImages","objectSpread","setSelectedImages","_useState3","_useState4","showError","setShowError","_useState5","_useState6","showBackendError","setShowBackendError","_useState7","_useState8","errorInfo","setErrorInfo","_useState9","_useState10","openPullModal","setOpenPullModal","_useState11","_useState12","pullImageName","setPullImageName","useEffect","newSelected","handleCheckboxChange","changeEvent","target","old","handleRemoveImages","usedImages","usedImagesNames","forEach","image","imageRepoTag","tag","concat","repository","container","toConsumableArray","Set","join","handleImageOperation","mode","toLowerCase","console","log","_i4","_Object$entries4","_ref12","_ref11","isSelected","imagesTitleClasses","content","makeStyles","buttonGroup","alignSelf","useStyles","loading","Grid","direction","map","Fragment","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-label","FormControlLabel","stopPropagation","onFocus","control","Checkbox","onChange","checked","label","item","Tooltip","title","created","size","MaterialCustomized_MenuImages","AccordionDetails","disabled","startIcon","Delete_default","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","type","fullWidth","e","value","DialogActions","Alert","severity","AlertTitle","split","Typography","component","align"],"mappings":"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","file":"js/6.4bd4a053.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport css from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator = () => (\r\n    <div className={css.Loading_Indicator}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading_Indicator\":\"LoadingIndicator_Loading_Indicator__1Yf4m\"};","// Sets all properties of an object to FALSE\nexport const isAllTrue = (obj: Object) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (value === false) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const toggleSelectAll = (obj: Object, allTrue: Boolean) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (allTrue) {\n            obj[key] = false\n        } else {\n            obj[key] = true\n        }\n    }\n};\n\nexport const handleSelectAll = (selectedItems: Object) => {\n    const allTrue = isAllTrue(selectedItems);\n    const updated = { ...selectedItems };\n    toggleSelectAll(updated, allTrue);\n\n    return updated\n};\n\nexport const isSelectedAny = (selectedItems: Object) => {\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            return true\n        }\n    }\n    return false;\n};\n\nexport const isSelectedOne = (selectedItems: Object) => {\n    let count = 0;\n\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            count++;\n        }\n    }\n\n    return count === 1;\n};\n\nexport const extractIds = (items: Object) => {\n    const imageIds = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            imageIds.push(key);\n        }\n    }\n    return imageIds;\n};\n\nexport const extractSelected = (items) => {\n    const selectedItems = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            selectedItems.push(key);\n        }\n    }\n    return selectedItems;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Images\":\"Images_Images__3x1Ll\",\"Wrapper\":\"Images_Wrapper__1xE4D\",\"Info\":\"Images_Info__1Qyuy\",\"Content\":\"Images_Content__2tivE\",\"Buttons\":\"Images_Buttons__Y76bS\",\"Heading\":\"Images_Heading__3eEwR\",\"Repository\":\"Images_Repository__821st\",\"Tag\":\"Images_Tag__2SjkM\",\"Id\":\"Images_Id__1DnJp\",\"Created\":\"Images_Created__hw-qD\",\"Size\":\"Images_Size__3S1-O\",\"Button\":\"Images_Button__NFpaW\",\"Headline\":\"Images_Headline__qGSEj\",\"DetailTitle\":\"Images_DetailTitle__2LcMp\",\"Error\":\"Images_Error__1oEqs\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import React, { useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst MenuImages = props => {\n    const { imageId, imageOperation } = props\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const id = {};\n\n    if (imageId) {\n        id[imageId] = true;\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"secondary\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Actions\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => imageOperation(id, \"remove\")}>Remove</MenuItem>\n                <MenuItem onClick={handleClose}>Close</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n\nexport default MenuImages;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport * as actions from '../../store/actions/index';\nimport { AppState } from '../../store';\n\nimport css from './Images.module.css';\nimport LoadingIndicator from '../../components/UI/LoadingIndicator/LoadingIndicator';\nimport MenuImages from '../../components/MaterialCustomized/MenuImages';\n\nimport { Image, Container } from '../../models/Models';\nimport { isAllTrue, handleSelectAll, isSelectedAny, extractIds } from '../../helpers/helpers';\nimport { useViewport } from '../../Viewport';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\ninterface IImagesProps {\n    images: Image[],\n    loading: boolean,\n    errorContainers: string,\n    errorImages: string,\n    fetchImages: Function,\n    removeImages: Function,\n    pruneImages: Function,\n    pullImage: Function,\n\n    imagesDataTest: Image[],\n    containers: Container[],\n    fetchContainers: Function,\n}\n\nconst Images = (props: IImagesProps) => {\n    const { fetchImages, removeImages, pruneImages, pullImage, images, containers, fetchContainers, errorContainers, errorImages } = props;\n    const { width, phone, tabletPortrait, tabletLandscape, desktop } = useViewport();\n\n    const defaultSelectedImages = {};\n\n    for (const [key, value] of Object.entries(images)) {\n        defaultSelectedImages[value.id] = false\n    }\n\n    const [selectedImages, setSelectedImages] = useState<any>({ ...defaultSelectedImages });\n    const [showError, setShowError] = useState<boolean>(false);\n    const [showBackendError, setShowBackendError] = useState<boolean>(false);\n    const [errorInfo, setErrorInfo] = useState<string>(\"\");\n    const [openPullModal, setOpenPullModal] = useState(false);\n    const [pullImageName, setPullImageName] = useState(\"\");\n\n    const allTrue = isAllTrue(selectedImages);\n\n    useEffect(() => {\n        fetchImages();\n        fetchContainers();\n    }, [fetchImages, fetchContainers]);\n\n    useEffect(() => {\n        setShowBackendError(errorContainers.length > 0 || errorImages.length > 0);\n    }, [errorContainers, errorImages]);\n\n    useEffect(() => {\n        const newSelected = {};\n        for (const [key, value] of Object.entries(images)) {\n            newSelected[value.id] = false\n        }\n        setSelectedImages({ ...newSelected });\n    }, [images]);\n\n    const handleCheckboxChange = changeEvent => {\n        const { id } = changeEvent.target;\n        const old = { ...selectedImages };\n\n        for (const [key, value] of Object.entries(old)) {\n            if (id === key) {\n                old[key] = !old[key];\n            }\n        }\n\n        setSelectedImages(old);\n    };\n\n    const handlePullOpen = () => {\n        setOpenPullModal(true);\n    };\n\n    const handlePullClose = () => {\n        setOpenPullModal(false);\n    };\n\n    const onChangePull = (e) => {\n        setPullImageName(e.target.value);\n    };\n\n    const handleImagePull = () => {\n        setOpenPullModal(false);\n        if (pullImageName.length == 0) {\n            return;\n        }\n        pullImage(pullImageName);\n        setPullImageName('');\n    };\n\n    const handleRemoveImages = (images, imageIds) => {\n        // console.log(\"handleRemoveImages()\");\n        const usedImages = [];\n        let usedImagesNames = [];\n\n        images.forEach((image) => {\n            if (selectedImages[image.id] === true) {\n                const imageRepoTag = (image.tag === '') ? `${image.repository}` : `${image.repository}:${image.tag}`;\n                containers.forEach((container) => {\n                    if (container.image === imageRepoTag) {\n                        usedImages.push(image);\n                        usedImagesNames.push(imageRepoTag);\n                    }\n                });\n            }\n        });\n\n        if (usedImages.length > 0) {\n            setShowError(true);\n            usedImagesNames = [...new Set(usedImagesNames)];\n            setErrorInfo(usedImagesNames.join(\" \"));\n        } else {\n            removeImages(imageIds);\n        }\n    };\n\n    const handleImageOperation = (selectedImages, mode: string) => {\n        // console.log(`triggered handleImageOperation(), mode: ${mode}`);\n        const imageIds = extractIds(selectedImages);\n\n        switch (mode.toLowerCase()) {\n            case \"remove\":\n                handleRemoveImages(images, imageIds);\n                break;\n            default: console.log(\"Unknown operation!\");\n        }\n\n        const updated = { ...selectedImages };\n\n        for (const [key, value] of Object.entries(updated)) {\n            if (value === true) {\n                updated[key] = false\n            }\n        }\n        setSelectedImages(updated);\n    };\n\n    const selectAll = () => {\n        const updated = handleSelectAll(selectedImages);\n        setSelectedImages(updated);\n    };\n\n    const isSelected = isSelectedAny(selectedImages);\n\n    const imagesTitleClasses = [css.Content, css.Heading];\n    const useStyles = makeStyles({\n        buttonGroup: {\n            alignSelf: \"flex-start\",\n        }\n    });\n    const classes = useStyles();\n\n    let content = <div className={css.Wrapper}><LoadingIndicator /></div>\n\n    if (!props.loading) {\n        content = <Grid container direction=\"column\">\n            {(images && images.length) ?\n                (images.map((image, i) => {\n                    return <React.Fragment key={image.id}>\n\n                        <Accordion>\n\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                            >\n                                <FormControlLabel\n                                    aria-label=\"Acknowledge\"\n                                    onClick={(event) => event.stopPropagation()}\n                                    onFocus={(event) => event.stopPropagation()}\n                                    control={<Checkbox\n                                        color=\"primary\"\n                                        onChange={handleCheckboxChange}\n                                        id={image.id}\n                                        checked={selectedImages[image.id] || false} />}\n                                    label=\"\"\n                                />\n                                <Grid item container className={css.Content}>\n                                    <Tooltip title={image.repository}>\n                                        <Grid className={css.Repository}>{image.repository}</Grid>\n                                    </Tooltip>\n                                    {(desktop || tabletLandscape) &&\n                                        <Tooltip title={image.tag}>\n                                            <Grid className={css.Tag}>{image.tag}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {!phone &&\n                                        <Tooltip title={image.id}>\n                                            <Grid className={css.Id}>{image.id}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {(desktop || tabletLandscape) &&\n                                        <Tooltip title={image.created}>\n                                            <Grid className={css.Created}>{image.created}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {desktop &&\n                                        <Tooltip title={image.size}>\n                                            <Grid className={css.Size}>{image.size}</Grid>\n                                        </Tooltip>\n                                    }\n\n                                    <FormControlLabel\n                                        aria-label=\"Acknowledge\"\n                                        onClick={(event) => event.stopPropagation()}\n                                        onFocus={(event) => event.stopPropagation()}\n                                        control={<MenuImages\n                                            imageId={image.id}\n                                            imageOperation={handleImageOperation}\n                                        />}\n                                        label=\"\"\n                                    />\n                                </Grid>\n                            </AccordionSummary>\n\n                            <AccordionDetails>\n                                <Grid container direction=\"column\">\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>Size:</Grid>\n                                        <Grid item className={css.Size}>{image.size}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>Created:</Grid>\n                                        <Grid item className={css.Created}>{image.created}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>Tag:</Grid>\n                                        <Grid item className={css.Tag}>{image.tag}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>ID:</Grid>\n                                        <Grid item className={css.Id}>{image.id}</Grid>\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n\n                        </Accordion>\n\n                    </React.Fragment>\n                }))\n                :\n                ''\n            }\n        </Grid>\n    }\n\n    return (\n        <div className={css.Images}>\n            <div className={css.Wrapper}>\n                <h1 className={css.Headline}>Podman Images</h1>\n                <p>Showing information about images based on the `podman images` command</p>\n                <Grid container className={css.Buttons}>\n                    <Grid item className={css.Button}>\n                        <Button\n                            disabled={!isSelected}\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            startIcon={<DeleteIcon />}\n                            onClick={() => handleImageOperation(selectedImages, \"remove\")}>\n                            Remove Selected\n                    </Button>\n                    </Grid>\n                    <Grid item className={css.Button}>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            startIcon={<DeleteIcon />}\n                            onClick={() => pruneImages()}>\n                            Remove unused images\n                        </Button>\n                    </Grid>\n\n                    <Grid item className={css.Button}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handlePullOpen}>\n                            Pull\n                        </Button>\n                        <Dialog open={openPullModal} onClose={handlePullClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">Pull</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Enter the image you want to pull\"\n                            </DialogContentText>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Image Pull\"\n                                    type=\"text\"\n                                    fullWidth\n                                    onChange={onChangePull}\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleImagePull} color=\"primary\">\n                                    Pull\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n\n                </Grid>\n\n                {showError &&\n                    <Alert severity=\"error\" onClose={() => { setShowError(!showError) }}>\n                        <AlertTitle><strong>Error</strong></AlertTitle>\n                        The following images are being used and cannot be deleted:\n                        {(errorInfo.length > 0) ?\n                            (errorInfo.split(' ').map((name, i) => {\n                                return <Typography key={name} variant=\"body1\" component=\"div\" align=\"left\">\n                                    <strong>image: {name}</strong><strong></strong>\n                                </Typography>\n                            }))\n                            :\n                            ''\n                        }\n                    </Alert>\n                }\n\n                {showBackendError &&\n                    <Alert severity=\"error\" onClose={() => { setShowBackendError(!showBackendError) }}>\n                        <AlertTitle><strong>Backend Error</strong></AlertTitle>\n                        {errorContainers.length > 0 &&\n                            <p className={css.Error}>{errorContainers}</p>\n                        }\n                        {errorImages.length > 0 &&\n                            <p className={css.Error}>{errorImages}</p>\n                        }\n                    </Alert>\n                }\n\n\n                <div className={css.Info}>\n                    <div className={imagesTitleClasses.join(' ')}>\n                        <Checkbox color=\"primary\" onChange={selectAll} checked={allTrue || false} />\n                        <div className={css.Repository}>Repository</div>\n                        {(desktop || tabletLandscape) &&\n                            <div className={css.Tag}>Tag</div>\n                        }\n                        {!phone &&\n                            <div className={css.Id}>ID</div>\n                        }\n                        {(desktop || tabletLandscape) &&\n                            <div className={css.Created}>Created</div>\n                        }\n                        {desktop &&\n                            <div className={css.Size}>Size</div>\n                        }\n\n                    </div>\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        images: state.images.images,\n        containers: state.containers.containers,\n        errorImages: state.images.error,\n        errorContainers: state.containers.error,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    return {\n        fetchImages: () =>\n            dispatch(actions.fetchImages()),\n        removeImages: (selectedImages: String[]) =>\n            dispatch(actions.removeImages(selectedImages)),\n        pruneImages: () =>\n            dispatch(actions.pruneImages()),\n        pullImage: (name) =>\n            dispatch(actions.pullImage(name)),\n        fetchContainers: () =>\n            dispatch(actions.fetchContainers()),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Images);\n"],"sourceRoot":""}