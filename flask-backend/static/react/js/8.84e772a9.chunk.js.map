{"version":3,"sources":["components/UI/LoadingIndicator/LoadingIndicator.tsx","components/UI/LoadingIndicator/LoadingIndicator.module.css","pages/ContainerLogs/ContainerLogs.module.css","pages/ContainerLogs/ContainerLogs.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1__","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1___default","LoadingIndicator","a","createElement","className","css","Loading_Indicator","module","exports","ContainerLogs","Wrapper","Info","LogViewer","Heading","ContainerLog","Headline","r","__webpack_exports__","react_redux__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_WebSocket__WEBPACK_IMPORTED_MODULE_3__","react_lazylog__WEBPACK_IMPORTED_MODULE_4__","_ContainerLogs_module_css__WEBPACK_IMPORTED_MODULE_5__","_ContainerLogs_module_css__WEBPACK_IMPORTED_MODULE_5___default","_components_UI_LoadingIndicator_LoadingIndicator__WEBPACK_IMPORTED_MODULE_6__","_Viewport__WEBPACK_IMPORTED_MODULE_7__","connect","state","containerLogs","containers","dispatch","withRouter","props","_useViewport","useViewport","width","phone","tabletPortrait","tabletLandscape","desktop","console","log","concat","ws","useContext","WebSocketContext","useEffect","interval","setInterval","updateLogs","match","params","id","clearInterval","content","enableSearch","extraLines","text","logs","caseInsensitive"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAaeE,IATU,kBACrBJ,EAAAK,EAAAC,cAAA,OAAKC,UAAWC,IAAIC,mBAChBT,EAAAK,EAAAC,cAAA,YACAN,EAAAK,EAAAC,cAAA,YACAN,EAAAK,EAAAC,cAAA,YACAN,EAAAK,EAAAC,cAAA,mCCRRI,EAAAC,QAAA,CAAkBF,kBAAA,kECAlBC,EAAAC,QAAA,CAAkBC,cAAA,qCAAAC,QAAA,+BAAAC,KAAA,4BAAAC,UAAA,iCAAAC,QAAA,+BAAAC,aAAA,oCAAAC,SAAA,mECDlBnB,EAAAoB,EAAAC,GAAA,IAAAtB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAuB,EAAAtB,EAAA,IAAAuB,EAAAvB,EAAA,IAAAwB,EAAAxB,EAAA,IAAAyB,EAAAzB,EAAA,KAAA0B,EAAA1B,EAAA,KAAA2B,EAAA3B,EAAAE,EAAAwB,GAAAE,EAAA5B,EAAA,KAAA6B,EAAA7B,EAAA,IA8Ee8B,sBAZS,SAACC,GACrB,MAAO,CACHC,cAAeD,EAAME,WAAWD,gBAIb,SAACE,GACxB,MAAO,IAKIJ,CAGbK,YAxDoB,SAACC,GAA+B,IAAAC,EACiBC,cAA3DC,EAD0CF,EAC1CE,MAAOC,EADmCH,EACnCG,MAAOC,EAD4BJ,EAC5BI,eAAgBC,EADYL,EACZK,gBAAiBC,EADLN,EACKM,QACvDC,QAAQC,IAAR,SAAAC,OAAqBP,EAArB,YAAAO,OAAqCN,EAArC,qBAAAM,OAA8DL,EAA9D,sBAAAK,OAAiGJ,EAAjG,cAAAI,OAA6HH,IAE7H,IAAMI,EAAKC,qBAAWC,KAOtBC,oBAAU,WACN,IAAMC,EAAWC,YAAY,kBAL7BR,QAAQC,IAAI,yBACZE,EAAGM,WAAWjB,EAAMkB,MAAMC,OAAOC,KAIgB,KAEjD,OAAO,WACHC,cAAcN,KAEnB,IAEH,IAAMK,EAAKpB,EAAMkB,MAAMC,OAAOC,GACxBxB,EAAgBI,EAAMJ,cAExB0B,EAAUzD,EAAAK,EAAAC,cAAA,OAAKC,UAAWC,IAAIK,SAASb,EAAAK,EAAAC,cAACqB,EAAA,EAAD,OAM3C,OAJII,GAAiBA,EAAcwB,KAC/BE,EAAUzD,EAAAK,EAAAC,cAACkB,EAAA,QAAD,CAASkC,cAAY,EAACC,WAAY,EAAGC,KAAM7B,EAAcwB,GAAIM,KAAMC,iBAAe,KAI5F9D,EAAAK,EAAAC,cAAA,OAAKC,UAAWC,IAAII,eAChBZ,EAAAK,EAAAC,cAAA,OAAKC,UAAWC,IAAIK,SAChBb,EAAAK,EAAAC,cAAA,MAAIC,UAAWC,IAAIU,UAAnB,mBACAlB,EAAAK,EAAAC,cAAA,0BAAkBiD,GAClBvD,EAAAK,EAAAC,cAAA,OAAKC,UAAWC,IAAIO,WACf0C","file":"js/8.84e772a9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport css from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator = () => (\r\n    <div className={css.Loading_Indicator}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading_Indicator\":\"LoadingIndicator_Loading_Indicator__1KMH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerLogs\":\"ContainerLogs_ContainerLogs__3iKLD\",\"Wrapper\":\"ContainerLogs_Wrapper__au1HH\",\"Info\":\"ContainerLogs_Info__35wK4\",\"LogViewer\":\"ContainerLogs_LogViewer__3Ze9L\",\"Heading\":\"ContainerLogs_Heading__2mgqn\",\"ContainerLog\":\"ContainerLogs_ContainerLog__AV1cy\",\"Headline\":\"ContainerLogs_Headline__3B7fu\"};","import React, { useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { AppState } from '../../store';\n\nimport { withRouter } from 'react-router-dom';\nimport { WebSocketContext } from '../../WebSocket';\nimport { LazyLog } from 'react-lazylog';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport css from './ContainerLogs.module.css';\nimport LoadingIndicator from '../../components/UI/LoadingIndicator/LoadingIndicator';\n\nimport { useViewport } from '../../Viewport';\n\n\ninterface IContainerLogsProps {\n    containerLogs: any,\n    loading: boolean,\n    match: any,\n    params: any,\n    id: string,\n}\n\nconst ContainerLogs = (props: IContainerLogsProps) => {\n    const { width, phone, tabletPortrait, tabletLandscape, desktop } = useViewport();\n    console.log(`width=${width}, phone=${phone}, tabletPortrait=${tabletPortrait}, tabletLandscape=${tabletLandscape}, desktop=${desktop}`);\n\n    const ws = useContext(WebSocketContext);\n\n    const updateLogs = () => {\n        console.log(\">>> updateLogs()\");\n        ws.updateLogs(props.match.params.id);\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => updateLogs(), 5000);\n        // returned function will be called on component unmount \n        return () => {\n            clearInterval(interval)\n        }\n    }, [])\n\n    const id = props.match.params.id;\n    const containerLogs = props.containerLogs;\n\n    let content = <div className={css.Wrapper}><LoadingIndicator /></div>;\n\n    if (containerLogs && containerLogs[id]) {\n        content = <LazyLog enableSearch extraLines={1} text={containerLogs[id].logs} caseInsensitive />\n    }\n\n    return (\n        <div className={css.ContainerLogs}>\n            <div className={css.Wrapper}>\n                <h1 className={css.Headline}>Containers Logs</h1>\n                <p>Container ID: {id}</p>\n                <div className={css.LogViewer}>\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        containerLogs: state.containers.containerLogs\n    };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    return {\n        //\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ContainerLogs));\n"],"sourceRoot":""}