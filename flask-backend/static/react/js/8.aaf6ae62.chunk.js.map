{"version":3,"sources":["pages/ContainerLogs/ContainerLogs.module.css","pages/ContainerLogs/ContainerLogs.tsx"],"names":["module","exports","ContainerLogs","Wrapper","Info","LogViewer","Heading","ContainerLog","Headline","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_WebSocket__WEBPACK_IMPORTED_MODULE_3__","react_lazylog__WEBPACK_IMPORTED_MODULE_4__","_ContainerLogs_module_css__WEBPACK_IMPORTED_MODULE_5__","_ContainerLogs_module_css__WEBPACK_IMPORTED_MODULE_5___default","_components_UI_LoadingIndicator_LoadingIndicator__WEBPACK_IMPORTED_MODULE_6__","connect","state","containerLogs","containers","activeConnection","connections","dispatch","withRouter","props","ws","useContext","WebSocketContext","useEffect","interval","setInterval","updateLogs","match","params","id","username","clearInterval","content","a","createElement","className","css","enableSearch","extraLines","text","logs","caseInsensitive"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,cAAA,qCAAAC,QAAA,+BAAAC,KAAA,4BAAAC,UAAA,iCAAAC,QAAA,+BAAAC,aAAA,oCAAAC,SAAA,mECDlBC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAAK,EAAAK,GAAAE,EAAAZ,EAAA,IA6Eea,sBAbS,SAACC,GACrB,MAAO,CACHC,cAAeD,EAAME,WAAWD,cAChCE,iBAAkBH,EAAMI,YAAYD,mBAIjB,SAACE,GACxB,MAAO,IAKIN,CAGbO,YAtDoB,SAACC,GAA+B,IAC1CJ,EAAqBI,EAArBJ,iBACFK,EAAKC,qBAAWC,KAMtBC,oBAAU,WACN,IAAMC,EAAWC,YAAY,WAJ7BL,EAAGM,WAAWP,EAAMQ,MAAMC,OAAOC,GAAId,EAAiBe,WAIL,KAEjD,OAAO,WACHC,cAAcP,KAEnB,IAEH,IAAMK,EAAKV,EAAMQ,MAAMC,OAAOC,GACxBhB,EAAgBM,EAAMN,cAExBmB,EAAU9B,EAAA+B,EAAAC,cAAA,OAAKC,UAAWC,IAAI5C,SAASU,EAAA+B,EAAAC,cAACxB,EAAA,EAAD,OAM3C,OAJIG,GAAiBA,EAAcgB,KAC/BG,EAAU9B,EAAA+B,EAAAC,cAAC3B,EAAA,QAAD,CAAS8B,cAAY,EAACC,WAAY,EAAGC,KAAM1B,EAAcgB,GAAIW,KAAMC,iBAAe,KAI5FvC,EAAA+B,EAAAC,cAAA,OAAKC,UAAWC,IAAI7C,eAChBW,EAAA+B,EAAAC,cAAA,OAAKC,UAAWC,IAAI5C,SAChBU,EAAA+B,EAAAC,cAAA,MAAIC,UAAWC,IAAIvC,UAAnB,mBACAK,EAAA+B,EAAAC,cAAA,0BAAkBL,GAClB3B,EAAA+B,EAAAC,cAAA,OAAKC,UAAWC,IAAI1C,WACfsC","file":"js/8.aaf6ae62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerLogs\":\"ContainerLogs_ContainerLogs__2KAs9\",\"Wrapper\":\"ContainerLogs_Wrapper__Nld1K\",\"Info\":\"ContainerLogs_Info__3sv_y\",\"LogViewer\":\"ContainerLogs_LogViewer__4F1Oy\",\"Heading\":\"ContainerLogs_Heading__2HmLS\",\"ContainerLog\":\"ContainerLogs_ContainerLog__3Jg5E\",\"Headline\":\"ContainerLogs_Headline__xLX_b\"};","import React, { useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { AppState } from '../../store';\n\nimport { withRouter } from 'react-router-dom';\nimport { WebSocketContext } from '../../WebSocket';\nimport { LazyLog } from 'react-lazylog';\nimport { Connection } from '../../models/Models';\n\nimport css from './ContainerLogs.module.css';\nimport LoadingIndicator from '../../components/UI/LoadingIndicator/LoadingIndicator';\n\nimport { useViewport } from '../../Viewport';\n\n\ninterface IContainerLogsProps {\n    containerLogs: any,\n    loading: boolean,\n    match: any,\n    params: any,\n    id: string,\n    activeConnection: Connection\n}\n\nconst ContainerLogs = (props: IContainerLogsProps) => {\n    const { activeConnection } = props;\n    const ws = useContext(WebSocketContext);\n\n    const updateLogs = () => {\n        ws.updateLogs(props.match.params.id, activeConnection.username);\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => updateLogs(), 5000);\n        // returned function will be called on component unmount \n        return () => {\n            clearInterval(interval)\n        }\n    }, [])\n\n    const id = props.match.params.id;\n    const containerLogs = props.containerLogs;\n\n    let content = <div className={css.Wrapper}><LoadingIndicator /></div>;\n\n    if (containerLogs && containerLogs[id]) {\n        content = <LazyLog enableSearch extraLines={1} text={containerLogs[id].logs} caseInsensitive />\n    }\n\n    return (\n        <div className={css.ContainerLogs}>\n            <div className={css.Wrapper}>\n                <h1 className={css.Headline}>Containers Logs</h1>\n                <p>Container ID: {id}</p>\n                <div className={css.LogViewer}>\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        containerLogs: state.containers.containerLogs,\n        activeConnection: state.connections.activeConnection\n    };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    return {\n        //\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ContainerLogs));\n"],"sourceRoot":""}