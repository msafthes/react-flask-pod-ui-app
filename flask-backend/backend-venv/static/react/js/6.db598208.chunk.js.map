{"version":3,"sources":["components/UI/LoadingIndicator/LoadingIndicator.tsx","components/UI/LoadingIndicator/LoadingIndicator.module.css","helpers/helpers.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/Images/Images.module.css","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","components/MaterialCustomized/MenuImages.tsx","pages/Images/Images.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1__","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1___default","LoadingIndicator","a","createElement","className","css","Loading_Indicator","module","exports","isAllTrue","obj","_i","_Object$entries","Object","entries","length","_ref3","_ref2","_home_thesis_combined_thesis_app_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","handleSelectAll","selectedItems","console","log","allTrue","concat","updated","_home_thesis_combined_thesis_app_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_i2","_Object$entries2","_ref6","_ref5","key","toggleSelectAll","isSelectedAny","_i3","_Object$entries3","_ref9","_ref8","extractIds","items","imageIds","_i5","_Object$entries5","_ref15","_ref14","push","extractSelected","_i6","_Object$entries6","_ref18","_ref17","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__","Images","Wrapper","Info","Content","Buttons","Heading","Repository","Tag","Id","Created","Size","Button","Headline","DetailTitle","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","_defaultTheme__WEBPACK_IMPORTED_MODULE_2__","stylesOrCreator","options","arguments","undefined","defaultTheme","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","clsx__WEBPACK_IMPORTED_MODULE_6__","AlertTitle","props","ref","classes","other","gutterBottom","component","root","theme","fontWeight","typography","fontWeightMedium","marginTop","name","SuccessOutlined","createSvgIcon","react","ReportProblemOutlined","ErrorOutline","InfoOutlined","Close","defaultIconMapping","success","fontSize","warning","error","info","_ref","Alert_Alert","action","children","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","objectWithoutProperties","Paper","esm_extends","square","elevation","clsx_m","capitalize","message","IconButton","size","aria-label","title","onClick","withStyles","getColor","palette","type","colorManipulator","getBackgroundColor","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","main","& $icon","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","MenuImages","imageId","imageOperation","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","id","handleClose","react_default","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","MenuItem","connect","state","images","containers","dispatch","fetchImages","actions","removeImages","selectedImages","pruneImages","pullImage","fetchContainers","_useViewport","useViewport","width","phone","tabletPortrait","tabletLandscape","desktop","defaultSelectedImages","objectSpread","setSelectedImages","_useState3","_useState4","showError","setShowError","_useState5","_useState6","errorInfo","setErrorInfo","_useState7","_useState8","openPullModal","setOpenPullModal","_useState9","_useState10","pullImageName","setPullImageName","useEffect","handleCheckboxChange","changeEvent","target","old","handleRemoveImages","usedImages","usedImagesNames","forEach","image","imageRepoTag","tag","repository","container","toConsumableArray","Set","join","handleImageOperation","mode","toLowerCase","isSelected","imagesTitleClasses","content","makeStyles","buttonGroup","alignSelf","useStyles","loading","Grid","direction","map","Fragment","Accordion","AccordionSummary","expandIcon","ExpandMore_default","FormControlLabel","stopPropagation","onFocus","control","Checkbox","checked","label","item","Tooltip","created","MaterialCustomized_MenuImages","AccordionDetails","disabled","startIcon","Delete_default","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","onChange","e","value","DialogActions","Alert","split","Typography","align"],"mappings":"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","file":"js/6.db598208.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport css from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator = () => (\r\n    <div className={css.Loading_Indicator}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading_Indicator\":\"LoadingIndicator_Loading_Indicator__1KMH5\"};","// Sets all properties of an object to FALSE\nexport const isAllTrue = (obj: Object) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (value === false) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const toggleSelectAll = (obj: Object, allTrue: Boolean) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (allTrue) {\n            obj[key] = false\n        } else {\n            obj[key] = true\n        }\n    }\n};\n\nexport const handleSelectAll = (selectedItems: Object) => {\n    console.log(\"handleSelectAll(), selectedItems:\");\n    console.log(selectedItems);\n    const allTrue = isAllTrue(selectedItems);\n    console.log(`allTrue: ${allTrue}`);\n    const updated = { ...selectedItems };\n    toggleSelectAll(updated, allTrue);\n    console.log(\"updated:\");\n    console.log(updated);\n\n    return updated\n};\n\nexport const isSelectedAny = (selectedItems: Object) => {\n    console.log(\"isSelectedAny()\");\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            return true\n        }\n    }\n\n    return false;\n};\n\nexport const isSelectedOne = (selectedItems: Object) => {\n    let count = 0;\n\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            count++;\n        }\n    }\n\n    return count === 1;\n};\n\nexport const extractIds = (items: Object) => {\n    const imageIds = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            imageIds.push(key);\n        }\n    }\n    return imageIds;\n};\n\nexport const extractSelected = (items) => {\n    const selectedItems = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            selectedItems.push(key);\n        }\n    }\n    return selectedItems;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Images\":\"Images_Images__1bz2V\",\"Wrapper\":\"Images_Wrapper__311JS\",\"Info\":\"Images_Info__1E8kh\",\"Content\":\"Images_Content__3juJ9\",\"Buttons\":\"Images_Buttons__IRao8\",\"Heading\":\"Images_Heading__1bumq\",\"Repository\":\"Images_Repository__3nV7v\",\"Tag\":\"Images_Tag__2EzLl\",\"Id\":\"Images_Id__2HSAa\",\"Created\":\"Images_Created__2XMEc\",\"Size\":\"Images_Size__ygV-n\",\"Button\":\"Images_Button__1mg2s\",\"Headline\":\"Images_Headline__snVxl\",\"DetailTitle\":\"Images_DetailTitle__F6LsO\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import React, { useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst MenuImages = props => {\n    const { imageId, imageOperation } = props\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const id = {};\n\n    if (imageId) {\n        id[imageId] = true;\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"secondary\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Actions\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => imageOperation(id, \"remove\")}>Remove</MenuItem>\n                <MenuItem onClick={handleClose}>Close</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n\nexport default MenuImages;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport * as actions from '../../store/actions/index';\nimport { AppState } from '../../store';\n\nimport css from './Images.module.css';\nimport LoadingIndicator from '../../components/UI/LoadingIndicator/LoadingIndicator';\nimport { Image, Container } from '../../models/Models';\n\nimport { isAllTrue, handleSelectAll, isSelectedAny, extractIds } from '../../helpers/helpers';\n\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography } from '@material-ui/core';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport MenuImages from '../../components/MaterialCustomized/MenuImages';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { useViewport } from '../../Viewport';\n\n\ninterface IImagesProps {\n    images: Image[],\n    loading: boolean,\n    fetchImages: Function,\n    removeImages: Function,\n    pruneImages: Function,\n    pullImage: Function,\n\n    imagesDataTest: Image[],\n    containers: Container[],\n    fetchContainers: Function,\n}\n\nconst Images = (props: IImagesProps) => {\n    const { fetchImages, removeImages, pruneImages, pullImage, images, containers, fetchContainers } = props;\n    const { width, phone, tabletPortrait, tabletLandscape, desktop } = useViewport();\n    console.log(`width=${width}, phone=${phone}, tabletPortrait=${tabletPortrait}, tabletLandscape=${tabletLandscape}, desktop=${desktop}`);\n\n    const defaultSelectedImages = {};\n\n    for (const [key, value] of Object.entries(images)) {\n        defaultSelectedImages[value.id] = false\n    }\n\n    const [selectedImages, setSelectedImages] = useState<any>({ ...defaultSelectedImages });\n    const [showError, setShowError] = useState<boolean>(false);\n    const [errorInfo, setErrorInfo] = useState<string>(\"\");\n    const [openPullModal, setOpenPullModal] = useState(false);\n    const [pullImageName, setPullImageName] = useState(\"\");\n\n    const allTrue = isAllTrue(selectedImages);\n\n    useEffect(() => {\n        fetchImages();\n        fetchContainers();\n    }, [fetchImages, fetchContainers]);\n\n    const handleCheckboxChange = changeEvent => {\n        const { id } = changeEvent.target;\n        const old = { ...selectedImages };\n\n        for (const [key, value] of Object.entries(old)) {\n            if (id === key) {\n                old[key] = !old[key];\n            }\n        }\n\n        setSelectedImages(old);\n    };\n\n    const handlePullOpen = () => {\n        setOpenPullModal(true);\n    };\n\n    const handlePullClose = () => {\n        setOpenPullModal(false);\n    };\n\n    const onChangePull = (e) => {\n        setPullImageName(e.target.value);\n    };\n\n    const handleImagePull = () => {\n        setOpenPullModal(false);\n        if (pullImageName.length == 0) {\n            console.log(\"empty image pull name\");\n            return;\n        }\n        pullImage(pullImageName);\n        setPullImageName('');\n    };\n\n    const handleRemoveImages = (images, imageIds) => {\n        console.log(\"handleRemoveImages()\");\n        const usedImages = [];\n        let usedImagesNames = [];\n\n        images.forEach((image) => {\n            if (selectedImages[image.id] === true) {\n                const imageRepoTag = (image.tag === '') ? `${image.repository}` : `${image.repository}:${image.tag}`;\n                containers.forEach((container) => {\n                    if (container.image === imageRepoTag) {\n                        usedImages.push(image);\n                        usedImagesNames.push(imageRepoTag);\n                    }\n                });\n            }\n        });\n\n        if (usedImages.length > 0) {\n            console.log(\"SELECTION INVALID - there are used images\");\n            setShowError(true);\n            usedImagesNames = [...new Set(usedImagesNames)];\n            setErrorInfo(usedImagesNames.join(\" \"));\n        } else {\n            console.log(\"Ready for deletion\");\n            removeImages(imageIds);\n        }\n    };\n\n    const handleImageOperation = (selectedImages, mode: string) => {\n        console.log(`triggered handleImageOperation(), mode: ${mode}`);\n        const imageIds = extractIds(selectedImages);\n\n        switch (mode.toLowerCase()) {\n            case \"remove\":\n                handleRemoveImages(images, imageIds);\n                break;\n            default: console.log(\"Unknown operation!\");\n        }\n\n        const updated = { ...selectedImages };\n\n        for (const [key, value] of Object.entries(updated)) {\n            if (value === true) {\n                updated[key] = false\n            }\n        }\n        setSelectedImages(updated);\n    };\n\n    const selectAll = () => {\n        const updated = handleSelectAll(selectedImages);\n        setSelectedImages(updated);\n    };\n\n    const isSelected = isSelectedAny(selectedImages);\n\n    const imagesTitleClasses = [css.Content, css.Heading];\n    const useStyles = makeStyles({\n        buttonGroup: {\n            alignSelf: \"flex-start\",\n        }\n    });\n    const classes = useStyles();\n\n    let content = <div className={css.Wrapper}><LoadingIndicator /></div>\n\n    if (!props.loading) {\n        content = <Grid container direction=\"column\">\n            {(images && images.length) ?\n                (images.map((image, i) => {\n                    return <React.Fragment key={image.id}>\n\n                        <Accordion>\n\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                            >\n                                <FormControlLabel\n                                    aria-label=\"Acknowledge\"\n                                    onClick={(event) => event.stopPropagation()}\n                                    onFocus={(event) => event.stopPropagation()}\n                                    control={<Checkbox\n                                        color=\"primary\"\n                                        onClick={handleCheckboxChange}\n                                        id={image.id}\n                                        checked={selectedImages[image.id]} />}\n                                    // label=\"Select\"\n                                    label=\"\"\n                                />\n                                <Grid item container className={css.Content}>\n                                    <Tooltip title={image.repository}>\n                                        <Grid className={css.Repository}>{image.repository}</Grid>\n                                    </Tooltip>\n                                    {(desktop || tabletLandscape) &&\n                                        <Tooltip title={image.tag}>\n                                            <Grid className={css.Tag}>{image.tag}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {!phone &&\n                                        <Tooltip title={image.id}>\n                                            <Grid className={css.Id}>{image.id}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {(desktop || tabletLandscape) &&\n                                        <Tooltip title={image.created}>\n                                            <Grid className={css.Created}>{image.created}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {desktop &&\n                                        <Tooltip title={image.size}>\n                                            <Grid className={css.Size}>{image.size}</Grid>\n                                        </Tooltip>\n                                    }\n\n                                    <FormControlLabel\n                                        aria-label=\"Acknowledge\"\n                                        onClick={(event) => event.stopPropagation()}\n                                        onFocus={(event) => event.stopPropagation()}\n                                        control={<MenuImages\n                                            imageId={image.id}\n                                            imageOperation={handleImageOperation}\n                                        />}\n                                        // label=\"Select\"\n                                        label=\"\"\n                                    />\n                                </Grid>\n                            </AccordionSummary>\n\n                            <AccordionDetails>\n                                <Grid container direction=\"column\">\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>Size:</Grid>\n                                        <Grid item className={css.Size}>{image.size}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>Created:</Grid>\n                                        <Grid item className={css.Created}>{image.created}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>Tag:</Grid>\n                                        <Grid item className={css.Tag}>{image.tag}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={css.DetailTitle}>ID:</Grid>\n                                        <Grid item className={css.Id}>{image.id}</Grid>\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n\n                        </Accordion>\n\n                    </React.Fragment>\n                }))\n                :\n                ''\n            }\n        </Grid>\n    }\n\n    return (\n        <div className={css.Images}>\n            <div className={css.Wrapper}>\n                <h1 className={css.Headline}>Podman Images</h1>\n                <p>Showing information about images based on the `podman images` command</p>\n                <Grid container className={css.Buttons}>\n                    <Grid item className={css.Button}>\n                        <Button\n                            disabled={!isSelected}\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            startIcon={<DeleteIcon />}\n                            onClick={() => handleImageOperation(selectedImages, \"remove\")}>\n                            Remove Selected\n                    </Button>\n                    </Grid>\n                    <Grid item className={css.Button}>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            startIcon={<DeleteIcon />}\n                            onClick={() => pruneImages()}>\n                            Remove unused images\n                        </Button>\n                    </Grid>\n\n                    <Grid item className={css.Button}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handlePullOpen}>\n                            Pull\n                        </Button>\n                        <Dialog open={openPullModal} onClose={handlePullClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">Pull</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Enter the image you want to pull\"\n                            </DialogContentText>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Image Pull\"\n                                    type=\"text\"\n                                    fullWidth\n                                    onChange={onChangePull}\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleImagePull} color=\"primary\">\n                                    Pull\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n\n                </Grid>\n\n                {showError &&\n                    <Alert severity=\"error\" onClose={() => { setShowError(!showError) }}>\n                        <AlertTitle><strong>Error</strong></AlertTitle>\n                        The following images are being used and cannot be deleted:\n                        {(errorInfo.length > 0) ?\n                            (errorInfo.split(' ').map((name, i) => {\n                                return <Typography key={name} variant=\"body1\" component=\"div\" align=\"left\">\n                                    <strong>image: {name}</strong><strong></strong>\n                                </Typography>\n                            }))\n                            :\n                            ''\n                        }\n                    </Alert>\n                }\n\n\n                <div className={css.Info}>\n                    <div className={imagesTitleClasses.join(' ')}>\n                        <Checkbox color=\"primary\" onClick={selectAll} checked={allTrue} />\n                        <div className={css.Repository}>Repository</div>\n                        {(desktop || tabletLandscape) &&\n                            <div className={css.Tag}>Tag</div>\n                        }\n                        {!phone &&\n                            <div className={css.Id}>ID</div>\n                        }\n                        {(desktop || tabletLandscape) &&\n                            <div className={css.Created}>Created</div>\n                        }\n                        {desktop &&\n                            <div className={css.Size}>Size</div>\n                        }\n\n                    </div>\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        images: state.images.images,\n        containers: state.containers.containers,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    return {\n        fetchImages: () =>\n            dispatch(actions.fetchImages()),\n        removeImages: (selectedImages: String[]) =>\n            dispatch(actions.removeImages(selectedImages)),\n        pruneImages: () =>\n            dispatch(actions.pruneImages()),\n        pullImage: (name) =>\n            dispatch(actions.pullImage(name)),\n        fetchContainers: () =>\n            dispatch(actions.fetchContainers()),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Images);\n"],"sourceRoot":""}