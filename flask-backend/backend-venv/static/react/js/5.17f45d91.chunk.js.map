{"version":3,"sources":["components/UI/LoadingIndicator/LoadingIndicator.tsx","components/UI/LoadingIndicator/LoadingIndicator.module.css","helpers/helpers.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","pages/Containers/Containers.module.css","../node_modules/@material-ui/icons/Pageview.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","components/MaterialCustomized/MenuContainers.tsx","pages/Containers/Containers.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1__","_LoadingIndicator_module_css__WEBPACK_IMPORTED_MODULE_1___default","LoadingIndicator","a","createElement","className","css","Loading_Indicator","module","exports","isAllTrue","obj","_i","_Object$entries","Object","entries","length","_ref3","_ref2","_home_thesis_combined_thesis_app_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","handleSelectAll","selectedItems","console","log","allTrue","concat","updated","_home_thesis_combined_thesis_app_react_flask_pod_ui_app_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_i2","_Object$entries2","_ref6","_ref5","key","toggleSelectAll","isSelectedAny","_i3","_Object$entries3","_ref9","_ref8","extractIds","items","imageIds","_i5","_Object$entries5","_ref15","_ref14","push","extractSelected","_i6","_Object$entries6","_ref18","_ref17","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","_defaultTheme__WEBPACK_IMPORTED_MODULE_2__","stylesOrCreator","options","arguments","undefined","defaultTheme","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","clsx__WEBPACK_IMPORTED_MODULE_6__","AlertTitle","props","ref","classes","other","gutterBottom","component","root","theme","fontWeight","typography","fontWeightMedium","marginTop","name","Containers","Wrapper","Info","Content","Buttons","Heading","ContainerId","Status","Image","Command","Created","Ports","Names","Button","DetailTitle","Headline","_interopRequireDefault","defineProperty","value","default","_react","_default","SuccessOutlined","createSvgIcon","react","ReportProblemOutlined","ErrorOutline","InfoOutlined","Close","defaultIconMapping","success","fontSize","warning","error","info","_ref","Alert_Alert","action","children","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","objectWithoutProperties","Paper","esm_extends","square","elevation","clsx_m","capitalize","message","IconButton","size","aria-label","title","onClick","withStyles","getColor","palette","type","colorManipulator","getBackgroundColor","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","main","& $icon","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","MenuContainers","containerId","containerOperation","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","id","handleClose","react_default","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","react_router_dom","to","style","textDecoration","startIcon","Pageview_default","MenuItem","connect","state","containers","dispatch","fetchContainers","actions","removeContainers","selectedContainers","stopContainers","killContainers","containerRun","command","_useViewport","useViewport","width","phone","tabletPortrait","tabletLandscape","desktop","defaultSelectedContainers","objectSpread","setSelectedContainers","_useState3","_useState4","openRunModal","setOpenRunModal","_useState5","_useState6","runCommand","setRunCommand","_useState7","_useState8","showError","setShowError","_useState9","_useState10","errorInfo","setErrorInfo","useEffect","newSelected","handleCheckboxChange","changeEvent","target","old","handleContainerOperation","mode","containerIds","toLowerCase","runningContainersIds","forEach","container","status","startsWith","toConsumableArray","Set","join","handleRemoveContainers","_i4","_Object$entries4","_ref12","_ref11","isSelected","containersTitleClasses","content","makeStyles","buttonGroup","alignSelf","useStyles","loading","Grid","direction","map","Fragment","Accordion","AccordionSummary","expandIcon","ExpandMore_default","FormControlLabel","stopPropagation","onFocus","control","Checkbox","onChange","checked","label","item","Tooltip","image","ports","MaterialCustomized_MenuContainers","AccordionDetails","names","created","disabled","Delete_default","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","e","DialogActions","Alert","split","Typography","align"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAaeE,IATU,kBACrBJ,EAAAK,EAAAC,cAAA,OAAKC,UAAWC,IAAIC,mBAChBT,EAAAK,EAAAC,cAAA,YACAN,EAAAK,EAAAC,cAAA,YACAN,EAAAK,EAAAC,cAAA,YACAN,EAAAK,EAAAC,cAAA,mCCRRI,EAAAC,QAAA,CAAkBF,kBAAA,kQCALG,EAAY,SAACC,GACtB,QAAAC,EAAA,EAAAC,EAA2BC,OAAOC,QAAQJ,GAA1CC,EAAAC,EAAAG,OAAAJ,IAAgD,KAAAK,EAAAJ,EAAAD,GAAAM,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAAAC,EAAA,GAC5C,IAAc,IAD8BA,EAAA,GAExC,OAAO,EAGf,OAAO,GAaEE,EAAkB,SAACC,GAC5BC,QAAQC,IAAI,qCACZD,QAAQC,IAAIF,GACZ,IAAMG,EAAUd,EAAUW,GAC1BC,QAAQC,IAAR,YAAAE,OAAwBD,IACxB,IAAME,EAAOZ,OAAAa,EAAA,EAAAb,CAAA,GAAQO,GAKrB,OApB2B,SAACV,EAAaa,GACzC,QAAAI,EAAA,EAAAC,EAA2Bf,OAAOC,QAAQJ,GAA1CiB,EAAAC,EAAAb,OAAAY,IAAgD,KAAAE,EAAAD,EAAAD,GAAAG,EAAAjB,OAAAK,EAAA,EAAAL,CAAAgB,EAAA,GAApCE,EAAoCD,EAAA,GAAAA,EAAA,GAExCpB,EAAIqB,IADJR,GAcRS,CAAgBP,EAASF,GACzBF,QAAQC,IAAI,YACZD,QAAQC,IAAIG,GAELA,GAGEQ,EAAgB,SAACb,GAC1BC,QAAQC,IAAI,mBACZ,QAAAY,EAAA,EAAAC,EAA2BtB,OAAOC,QAAQM,GAA1Cc,EAAAC,EAAApB,OAAAmB,IAA0D,KAAAE,EAAAD,EAAAD,GAAAG,EAAAxB,OAAAK,EAAA,EAAAL,CAAAuB,EAAA,GAAAC,EAAA,GACtD,IAAc,IADwCA,EAAA,GAElD,OAAO,EAIf,OAAO,GAeEC,EAAa,SAACC,GAEvB,IADA,IAAMC,EAAW,GACjBC,EAAA,EAAAC,EAA2B7B,OAAOC,QAAQyB,GAA1CE,EAAAC,EAAA3B,OAAA0B,IAAkD,KAAAE,EAAAD,EAAAD,GAAAG,EAAA/B,OAAAK,EAAA,EAAAL,CAAA8B,EAAA,GAAtCZ,EAAsCa,EAAA,IAChC,IADgCA,EAAA,IAE1CJ,EAASK,KAAKd,GAGtB,OAAOS,GAGEM,EAAkB,SAACP,GAE5B,IADA,IAAMnB,EAAgB,GACtB2B,EAAA,EAAAC,EAA2BnC,OAAOC,QAAQyB,GAA1CQ,EAAAC,EAAAjC,OAAAgC,IAAkD,KAAAE,EAAAD,EAAAD,GAAAG,EAAArC,OAAAK,EAAA,EAAAL,CAAAoC,EAAA,GAAtClB,EAAsCmB,EAAA,IAChC,IADgCA,EAAA,IAE1C9B,EAAcyB,KAAKd,GAG3B,OAAOX,qCCtEI,SAAA+B,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAArC,QAAiDwC,EAAAH,EAAArC,OAAgBwC,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSC,CAAiBL,IEJX,SAAAM,GACf,GAAAC,OAAAC,YAAA/C,OAAA6C,IAAA,uBAAA7C,OAAAgD,UAAAC,SAAAC,KAAAL,GAAA,OAAAL,MAAAW,KAAAN,GFGmCO,CAAeb,IGJnC,WACf,UAAAc,UAAA,mDHG2DC,GAJ3DvE,EAAAwE,EAAAC,EAAA,sBAAAlB,sCIAA,IAAAmB,EAAA1E,EAAA,GAAA2E,EAAA3E,EAAA,KAAA4E,EAAA5E,EAAA,KAWeyE,EAAA,EAPf,SAAAI,GACA,IAAAC,EAAAC,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,MACA,OAAS9D,OAAA0D,EAAA,EAAA1D,CAAwB4D,EAAkB5D,OAAAyD,EAAA,EAAAzD,CAAQ,CAC3DgE,aAAkBL,EAAA,GACfE,uCCRH,IAAAJ,EAAA1E,EAAA,GAAAkF,EAAAlF,EAAA,KAAAmF,EAAAnF,EAAA,GAAAoF,GAAApF,EAAA,GAAAA,EAAA,MAAAqF,EAAArF,EAAA,KAAAsF,EAAAtF,EAAA,KAgBAuF,EAA8BJ,EAAA,WAAgB,SAAAK,EAAAC,GAC9C,IAAAC,EAAAF,EAAAE,QACAlF,EAAAgF,EAAAhF,UACAmF,EAAc1E,OAAAiE,EAAA,EAAAjE,CAAwBuE,EAAA,yBAEtC,OAAsBL,EAAA,cAAoBE,EAAA,EAAYpE,OAAAyD,EAAA,EAAAzD,CAAQ,CAC9D2E,cAAA,EACAC,UAAA,MACAJ,MACAjF,UAAeS,OAAAqE,EAAA,EAAArE,CAAIyE,EAAAI,KAAAtF,IAChBmF,MAwBYlB,EAAA,EAAAxD,OAAAmE,EAAA,EAAAnE,CA3CR,SAAA8E,GACP,OAEAD,KAAA,CACAE,WAAAD,EAAAE,WAAAC,iBACAC,WAAA,KAsCyB,CACzBC,KAAA,iBADe,CAEdb,wBCnDD5E,EAAAC,QAAA,CAAkByF,WAAA,+BAAAC,QAAA,4BAAAC,KAAA,yBAAAC,QAAA,4BAAAC,QAAA,4BAAAC,QAAA,4BAAAC,YAAA,gCAAAC,OAAA,2BAAAC,MAAA,0BAAAC,QAAA,4BAAAC,QAAA,4BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,OAAA,2BAAAC,YAAA,gCAAAC,SAAA,gECClB,IAAAC,EAA6BrH,EAAQ,KAErCiB,OAAAqG,eAAA1G,EAAA,cACA2G,OAAA,IAEA3G,EAAA4G,aAAA,EAEA,IAAAC,EAAAJ,EAAoCrH,EAAQ,IAI5C0H,GAAA,EAFAL,EAA4CrH,EAAQ,MAEpDwH,SAAAC,EAAAD,QAAAjH,cAAA,QACAiE,EAAA,8SACC,YAED5D,EAAA4G,QAAAE,mHCXeC,EAAA1G,OAAA2G,EAAA,GAA4BC,EAAA,cAAmB,QAC9DrD,EAAA,8OACC,mBCFcsD,EAAA7G,OAAA2G,EAAA,GAA4BC,EAAA,cAAmB,QAC9DrD,EAAA,qFACC,yBCFcuD,EAAA9G,OAAA2G,EAAA,GAA4BC,EAAA,cAAmB,QAC9DrD,EAAA,4KACC,gBCFcwD,EAAA/G,OAAA2G,EAAA,GAA4BC,EAAA,cAAmB,QAC9DrD,EAAA,8MACC,gBCFcyD,EAAAhH,OAAA2G,EAAA,GAA4BC,EAAA,cAAmB,QAC9DrD,EAAA,0GACC,2BC8ID0D,EAAA,CACAC,QAAwBN,EAAA,cAAoBF,EAAmB,CAC/DS,SAAA,YAEAC,QAAwBR,EAAA,cAAoBC,EAAyB,CACrEM,SAAA,YAEAE,MAAsBT,EAAA,cAAoBE,EAAgB,CAC1DK,SAAA,YAEAG,KAAqBV,EAAA,cAAoBG,EAAgB,CACzDI,SAAA,aAIAI,EAAwBX,EAAA,cAAoBI,EAAS,CACrDG,SAAA,UAGIK,EAAqBZ,EAAA,WAAgB,SAAArC,EAAAC,GACzC,IAAAiD,EAAAlD,EAAAkD,OACAC,EAAAnD,EAAAmD,SACAjD,EAAAF,EAAAE,QACAlF,EAAAgF,EAAAhF,UACAoI,EAAApD,EAAAqD,UACAA,OAAA,IAAAD,EAAA,QAAAA,EACAE,EAAAtD,EAAAsD,MACAC,EAAAvD,EAAAuD,KACAC,EAAAxD,EAAAyD,YACAA,OAAA,IAAAD,EAAAd,EAAAc,EACAE,EAAA1D,EAAA0D,QACAC,EAAA3D,EAAA4D,KACAA,OAAA,IAAAD,EAAA,QAAAA,EACAE,EAAA7D,EAAA8D,SACAA,OAAA,IAAAD,EAAA,UAAAA,EACAE,EAAA/D,EAAAgE,QACAA,OAAA,IAAAD,EAAA,WAAAA,EACA5D,EAAc1E,OAAAwI,EAAA,EAAAxI,CAAwBuE,EAAA,4HAEtC,OAAsBqC,EAAA,cAAoB6B,EAAA,EAAOzI,OAAA0I,EAAA,EAAA1I,CAAQ,CACzDmI,OACAQ,QAAA,EACAC,UAAA,EACArJ,UAAeS,OAAA6I,EAAA,EAAA7I,CAAIyE,EAAAI,KAAAJ,EAAA,GAAA9D,OAAA4H,GAAA5H,OAAiDX,OAAA8I,EAAA,EAAA9I,CAAU6H,GAAAQ,KAAA9I,GAC9EiF,OACGE,IAAA,IAAAoD,EAAwClB,EAAA,cAAmB,OAC9DrH,UAAAkF,EAAAqD,MACGA,GAAAE,EAAAK,IAAApB,EAAAoB,IAAA,KAAsFzB,EAAA,cAAmB,OAC5GrH,UAAAkF,EAAAsE,SACGrB,GAAA,MAAAD,EAA2Cb,EAAA,cAAmB,OACjErH,UAAAkF,EAAAgD,QACGA,GAAA,WAAAA,GAAAQ,EAA2DrB,EAAA,cAAmB,OACjFrH,UAAAkF,EAAAgD,QACkBb,EAAA,cAAoBoC,EAAA,EAAU,CAChDC,KAAA,QACAC,aAAAtB,EACAuB,MAAAvB,EACAC,MAAA,UACAuB,QAAAnB,GACGV,IAAA,QAmFY/D,EAAA,EAAAxD,OAAAqJ,EAAA,EAAArJ,CAtRE,SAAA8E,GACjB,IAAAwE,EAAA,UAAAxE,EAAAyE,QAAAC,KAAkDC,EAAA,EAASA,EAAA,EAC3DC,EAAA,UAAA5E,EAAAyE,QAAAC,KAA4DC,EAAA,EAAUA,EAAA,EACtE,OAEA5E,KAAU7E,OAAA0I,EAAA,EAAA1I,CAAQ,GAAG8E,EAAAE,WAAA2E,MAAA,CACrBC,aAAA9E,EAAA+E,MAAAD,aACAE,gBAAA,cACAC,QAAA,OACAC,QAAA,aAIAC,gBAAA,CACApC,MAAAyB,EAAAxE,EAAAyE,QAAArC,QAAAgD,KAAA,IACAJ,gBAAAJ,EAAA5E,EAAAyE,QAAArC,QAAAgD,KAAA,IACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAArC,QAAAgD,OAKAE,aAAA,CACAvC,MAAAyB,EAAAxE,EAAAyE,QAAAjC,KAAA4C,KAAA,IACAJ,gBAAAJ,EAAA5E,EAAAyE,QAAAjC,KAAA4C,KAAA,IACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAAjC,KAAA4C,OAKAG,gBAAA,CACAxC,MAAAyB,EAAAxE,EAAAyE,QAAAnC,QAAA8C,KAAA,IACAJ,gBAAAJ,EAAA5E,EAAAyE,QAAAnC,QAAA8C,KAAA,IACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAAnC,QAAA8C,OAKAI,cAAA,CACAzC,MAAAyB,EAAAxE,EAAAyE,QAAAlC,MAAA6C,KAAA,IACAJ,gBAAAJ,EAAA5E,EAAAyE,QAAAlC,MAAA6C,KAAA,IACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAAlC,MAAA6C,OAKAK,gBAAA,CACA1C,MAAAyB,EAAAxE,EAAAyE,QAAArC,QAAAgD,KAAA,IACAM,OAAA,aAAA7J,OAAAmE,EAAAyE,QAAArC,QAAAgD,MACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAArC,QAAAgD,OAKAO,aAAA,CACA5C,MAAAyB,EAAAxE,EAAAyE,QAAAjC,KAAA4C,KAAA,IACAM,OAAA,aAAA7J,OAAAmE,EAAAyE,QAAAjC,KAAA4C,MACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAAjC,KAAA4C,OAKAQ,gBAAA,CACA7C,MAAAyB,EAAAxE,EAAAyE,QAAAnC,QAAA8C,KAAA,IACAM,OAAA,aAAA7J,OAAAmE,EAAAyE,QAAAnC,QAAA8C,MACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAAnC,QAAA8C,OAKAS,cAAA,CACA9C,MAAAyB,EAAAxE,EAAAyE,QAAAlC,MAAA6C,KAAA,IACAM,OAAA,aAAA7J,OAAAmE,EAAAyE,QAAAlC,MAAA6C,MACAC,UAAA,CACAtC,MAAA/C,EAAAyE,QAAAlC,MAAA6C,OAKAU,cAAA,CACA/C,MAAA,OACA9C,WAAAD,EAAAE,WAAAC,iBACA6E,gBAAAhF,EAAAyE,QAAArC,QAAAgD,MAIAW,WAAA,CACAhD,MAAA,OACA9C,WAAAD,EAAAE,WAAAC,iBACA6E,gBAAAhF,EAAAyE,QAAAjC,KAAA4C,MAIAY,cAAA,CACAjD,MAAA,OACA9C,WAAAD,EAAAE,WAAAC,iBACA6E,gBAAAhF,EAAAyE,QAAAnC,QAAA8C,MAIAa,YAAA,CACAlD,MAAA,OACA9C,WAAAD,EAAAE,WAAAC,iBACA6E,gBAAAhF,EAAAyE,QAAAlC,MAAA6C,MAIApC,KAAA,CACAkD,YAAA,GACAhB,QAAA,QACAD,QAAA,OACA5C,SAAA,GACA8D,QAAA,IAIAlC,QAAA,CACAiB,QAAA,SAIAvC,OAAA,CACAsC,QAAA,OACAmB,WAAA,SACAC,WAAA,OACAC,YAAA,GACAJ,aAAA,KAkJgC,CAChC7F,KAAA,YADe,CAEZqC,0VCjPY6D,EA3CQ,SAAA9G,GAAS,IACpB+G,EAAoC/G,EAApC+G,YAAaC,EAAuBhH,EAAvBgH,mBADOC,EAGIC,mBAA6B,MAHjCC,EAAA1L,OAAA2L,EAAA,EAAA3L,CAAAwL,EAAA,GAGrBI,EAHqBF,EAAA,GAGXG,EAHWH,EAAA,GAItBI,EAAK,GACXA,EAAGR,IAAe,EAElB,IAIMS,EAAc,WAChBF,EAAY,OAGhB,OACIG,EAAA3M,EAAAC,cAAA,WACI0M,EAAA3M,EAAAC,cAAC2G,EAAA,EAAD,CAAQsC,QAAQ,WAAWV,MAAM,YAAYoE,gBAAc,cAAcC,gBAAc,OAAO9C,QAVlF,SAAC+C,GACjBN,EAAYM,EAAMC,iBASd,WAGAJ,EAAA3M,EAAAC,cAAC+M,EAAA,EAAD,CACIP,GAAG,cACHF,SAAUA,EACVU,aAAW,EACXC,KAAMC,QAAQZ,GACd3D,QAAS8D,GAETC,EAAA3M,EAAAC,cAACmN,EAAA,EAAD,CAAMC,GAAE,mBAAA/L,OAAqB2K,GAAeqB,MAAO,CAAEC,eAAgB,OAAQzB,WAAY,SACrFa,EAAA3M,EAAAC,cAAC2G,EAAA,EAAD,CACI4G,UAAWb,EAAA3M,EAAAC,cAACwN,EAAAzN,EAAD,MACX+J,QAAS,kBAAM5I,QAAQC,IAAR,eAAAE,OAA2B2K,MAF9C,cAMJU,EAAA3M,EAAAC,cAACyN,EAAA,EAAD,CAAU3D,QAAS,kBAAMmC,EAAmBO,EAAI,YAAhD,UACAE,EAAA3M,EAAAC,cAACyN,EAAA,EAAD,CAAU3D,QAAS,kBAAMmC,EAAmBO,EAAI,UAAhD,QACAE,EAAA3M,EAAAC,cAACyN,EAAA,EAAD,CAAU3D,QAAS,kBAAMmC,EAAmBO,EAAI,UAAhD,QACAE,EAAA3M,EAAAC,cAACyN,EAAA,EAAD,CAAU3D,QAAS2C,GAAnB,wDC6XDiB,sBArBS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAMC,WAAWA,aAIV,SAACC,GACxB,MAAO,CACHC,gBAAiB,kBACbD,EAASE,QACbC,iBAAkB,SAACC,GAAD,OACdJ,EAASE,IAAyBE,KACtCC,eAAgB,SAACD,GAAD,OACZJ,EAASE,IAAuBE,KACpCE,eAAgB,SAACF,GAAD,OACZJ,EAASE,IAAuBE,KACpCG,aAAc,SAACC,GAAD,OACVR,EAASE,IAAqBM,OAI3BX,CAvWI,SAACzI,GAA4B,IACpC6I,EAAgG7I,EAAhG6I,gBAAiBE,EAA+E/I,EAA/E+I,iBAAkBE,EAA6DjJ,EAA7DiJ,eAAgBC,EAA6ClJ,EAA7CkJ,eAAgBC,EAA6BnJ,EAA7BmJ,aAAcR,EAAe3I,EAAf2I,WAD7CU,EAEuBC,cAA3DC,EAFoCF,EAEpCE,MAAOC,EAF6BH,EAE7BG,MAAOC,EAFsBJ,EAEtBI,eAAgBC,EAFML,EAENK,gBAAiBC,EAFXN,EAEWM,QACvD1N,QAAQC,IAAR,SAAAE,OAAqBmN,EAArB,YAAAnN,OAAqCoN,EAArC,qBAAApN,OAA8DqN,EAA9D,sBAAArN,OAAiGsN,EAAjG,cAAAtN,OAA6HuN,IAI7H,IAFA,IAAMC,EAA4B,GAElCrO,EAAA,EAAAC,EAA2BC,OAAOC,QAAQiN,GAA1CpN,EAAAC,EAAAG,OAAAJ,IAAuD,KAAAK,EAAAJ,EAAAD,GAAAM,EAAAJ,OAAA2L,EAAA,EAAA3L,CAAAG,EAAA,GAAAC,EAAA,GACnD+N,EADmD/N,EAAA,GACnBkL,cAAe,EARP,IAAAE,EAWQC,mBAAQzL,OAAAoO,EAAA,EAAApO,CAAA,GAAWmO,IAX3BzC,EAAA1L,OAAA2L,EAAA,EAAA3L,CAAAwL,EAAA,GAWrC+B,EAXqC7B,EAAA,GAWjB2C,EAXiB3C,EAAA,GAAA4C,EAYJ7C,oBAAS,GAZL8C,EAAAvO,OAAA2L,EAAA,EAAA3L,CAAAsO,EAAA,GAYrCE,GAZqCD,EAAA,GAYvBE,GAZuBF,EAAA,GAAAG,GAaRjD,mBAAS,IAbDkD,GAAA3O,OAAA2L,EAAA,EAAA3L,CAAA0O,GAAA,GAarCE,GAbqCD,GAAA,GAazBE,GAbyBF,GAAA,GAAAG,GAcVrD,oBAAkB,GAdRsD,GAAA/O,OAAA2L,EAAA,EAAA3L,CAAA8O,GAAA,GAcrCE,GAdqCD,GAAA,GAc1BE,GAd0BF,GAAA,GAAAG,GAeVzD,mBAAiB,IAfP0D,GAAAnP,OAAA2L,EAAA,EAAA3L,CAAAkP,GAAA,GAerCE,GAfqCD,GAAA,GAe1BE,GAf0BF,GAAA,GAiBtCzO,GAAUd,YAAU2N,GAE1B+B,oBAAU,WACNlC,KACD,CAACA,IAEJkC,oBAAU,WACN9O,QAAQC,IAAI,0BAEZ,IADA,IAAM8O,EAAc,GACpBzO,EAAA,EAAAC,EAA2Bf,OAAOC,QAAQiN,GAA1CpM,EAAAC,EAAAb,OAAAY,IAAuD,KAAAE,EAAAD,EAAAD,GAAAG,EAAAjB,OAAA2L,EAAA,EAAA3L,CAAAgB,EAAA,GAAAC,EAAA,GACnDsO,EADmDtO,EAAA,GACjCqK,cAAe,EAErC+C,EAAsBrO,OAAAoO,EAAA,EAAApO,CAAA,GAAKuP,KAC5B,CAACrC,IAEJ,IAsBMsC,GAAuB,SAAAC,GAIzB,IAJwC,IAChC3D,EAAO2D,EAAYC,OAAnB5D,GACF6D,EAAG3P,OAAAoO,EAAA,EAAApO,CAAA,GAAQuN,GAEjBlM,EAAA,EAAAC,EAA2BtB,OAAOC,QAAQ0P,GAA1CtO,EAAAC,EAAApB,OAAAmB,IAAgD,KAAAE,EAAAD,EAAAD,GAAAG,EAAAxB,OAAA2L,EAAA,EAAA3L,CAAAuB,EAAA,GAApCL,EAAoCM,EAAA,GAAAA,EAAA,GACxCsK,IAAO5K,IACPyO,EAAIzO,IAAQyO,EAAIzO,IAIxBmN,EAAsBsB,IAyBpBC,GAA2B,SAACrC,EAAoBsC,GAClDrP,QAAQC,IAAR,+CAAAE,OAA2DkP,IAC3D,IAAMC,EAAe7N,YAAgBsL,GAErC,OAAQsC,EAAKE,eACT,IAAK,UA3BkB,SAACxC,EAAoBuC,GAChDtP,QAAQC,IAAI,4BACZ,IAAIuP,EAAuB,GAC3B9C,EAAW+C,QAAQ,SAACC,GAChB1P,QAAQC,IAAR,WAAAE,OAAuBuP,EAAUC,UACkB,IAA9C5C,EAAmB2C,EAAU5E,cAA2B4E,EAAUC,OAAOC,WAAW,QACrFJ,EAAqBhO,KAAKkO,EAAU5E,eAIxC0E,EAAqB9P,OAAS,GAC9BM,QAAQC,IAAI,oDACZwO,IAAa,GACbe,EAAoBhQ,OAAAqQ,EAAA,EAAArQ,CAAO,IAAIsQ,IAAIN,IACnCX,GAAaW,EAAqBO,KAAK,QAEvC/P,QAAQC,IAAI,sBACZ6M,EAAiBwC,IAWbU,CAAuBjD,EAAoBuC,GAC3C,MACJ,IAAK,OACDtC,EAAesC,GACf,MACJ,IAAK,OACDrC,EAAeqC,GACf,MACJ,QAAStP,QAAQC,IAAI,sBAKzB,IAFA,IAAMG,EAAOZ,OAAAoO,EAAA,EAAApO,CAAA,GAAQuN,GAErBkD,EAAA,EAAAC,EAA2B1Q,OAAOC,QAAQW,GAA1C6P,EAAAC,EAAAxQ,OAAAuQ,IAAoD,KAAAE,EAAAD,EAAAD,GAAAG,EAAA5Q,OAAA2L,EAAA,EAAA3L,CAAA2Q,EAAA,GAAxCzP,EAAwC0P,EAAA,IAClC,IADkCA,EAAA,KAE5ChQ,EAAQM,IAAO,GAIvBmN,EAAsBzN,IAQ1BJ,QAAQC,IAAI,+BACZD,QAAQC,IAAI8M,GACZ/M,QAAQC,IAAI,4BACZD,QAAQC,IAAIyM,GACZ,IAAM2D,GAAazP,YAAcmM,GAE3BuD,GAAyB,CAACtR,IAAI+F,QAAS/F,IAAIiG,SAQ7CsL,IAPcC,YAAW,CACzBC,YAAa,CACTC,UAAW,eAGHC,GAEFnF,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAI6F,SAAS2G,EAAA3M,EAAAC,cAACF,EAAA,EAAD,QAkH3C,OAhHKmF,EAAM6M,UACPL,GAAU/E,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,UAC9BpE,GAAcA,EAAWhN,OACtBgN,EAAWqE,IAAI,SAACrB,EAAWxN,GAOxB,OANAlC,QAAQC,IAAI,qBACZD,QAAQC,IAAI,cACZD,QAAQC,IAAIyP,GACZ1P,QAAQC,IAAIyP,EAAU5E,aACtB9K,QAAQC,IAAI8M,EAAmB2C,EAAU5E,cACzC9K,QAAQC,IAAI,MACLuL,EAAA3M,EAAAC,cAAC0M,EAAA3M,EAAMmS,SAAP,CAAgBtQ,IAAKgP,EAAU5E,aAElCU,EAAA3M,EAAAC,cAACmS,EAAA,EAAD,KAEIzF,EAAA3M,EAAAC,cAACoS,EAAA,EAAD,CACIC,WAAY3F,EAAA3M,EAAAC,cAACsS,EAAAvS,EAAD,MACZ6J,aAAW,SACX+C,gBAAc,8BACdH,GAAG,8BAEHE,EAAA3M,EAAAC,cAACuS,EAAA,EAAD,CACI3I,aAAW,cACXE,QAAS,SAAC+C,GAAD,OAAWA,EAAM2F,mBAC1BC,QAAS,SAAC5F,GAAD,OAAWA,EAAM2F,mBAC1BE,QAAShG,EAAA3M,EAAAC,cAAC2S,EAAA,EAAD,CACLpK,MAAM,UAENqK,SAAU1C,GAEV1D,GAAI,MACJqG,QAAS5E,EAAmB2C,EAAU5E,eAE1C8G,MAAM,KAEVpG,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMgB,MAAI,EAACnC,WAAS,EAAC3Q,UAAWC,IAAI+F,SAChCyG,EAAA3M,EAAAC,cAACgT,EAAA,EAAD,CAASnJ,MAAO+G,EAAU5E,aACtBU,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIkG,aAAcwK,EAAU5E,eAE/C4C,GAAWD,IACTjC,EAAA3M,EAAAC,cAACgT,EAAA,EAAD,CAASnJ,MAAO+G,EAAUC,QACtBnE,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAImG,QAASuK,EAAUC,UAG9CpC,GACE/B,EAAA3M,EAAAC,cAACgT,EAAA,EAAD,CAASnJ,MAAO+G,EAAUqC,OACtBvG,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIoG,OAAQsK,EAAUqC,QAG9CrE,GACGlC,EAAA3M,EAAAC,cAACgT,EAAA,EAAD,CAASnJ,MAAO+G,EAAUsC,OACtBxG,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIuG,OAAQmK,EAAUsC,QAI/CxG,EAAA3M,EAAAC,cAACuS,EAAA,EAAD,CACI3I,aAAW,cACXE,QAAS,SAAC+C,GAAD,OAAWA,EAAM2F,mBAC1BC,QAAS,SAAC5F,GAAD,OAAWA,EAAM2F,mBAC1BE,QAAShG,EAAA3M,EAAAC,cAACmT,EAAD,CACLnH,YAAa4E,EAAU5E,YACvBC,mBAAoBqE,KAMxBwC,MAAM,OAKlBpG,EAAA3M,EAAAC,cAACoT,EAAA,EAAD,KACI1G,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,UACtBtF,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,OACtBtF,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAI0G,aAArB,UACA8F,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIwG,OAAQkK,EAAUyC,QAE3C3G,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,OACtBtF,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAI0G,aAArB,YACA8F,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIsG,SAAUoK,EAAU0C,UAE7C5G,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,OACtBtF,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAI0G,aAArB,YACA8F,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIqG,SAAUqK,EAAUvC,UAE7C3B,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,OACtBtF,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAI0G,aAArB,UACA8F,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIuG,OAAQmK,EAAUsC,QAE3CxG,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,OACtBtF,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAI0G,aAArB,UACA8F,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAIoG,OAAQsK,EAAUqC,QAE3CvG,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAACoB,UAAU,OACtBtF,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAI0G,aAArB,WACA8F,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAM9R,UAAWC,IAAImG,QAASuK,EAAUC,eAYhE,KAMRnE,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAI4F,YAChB4G,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAI6F,SAChB2G,EAAA3M,EAAAC,cAAA,MAAIC,UAAWC,IAAI2G,UAAnB,qBACA6F,EAAA3M,EAAAC,cAAA,2FACA0M,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMnB,WAAS,EAAC3Q,UAAWC,IAAIgG,SAC3BwG,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMgB,MAAI,EAAC9S,UAAWC,IAAIyG,QACtB+F,EAAA3M,EAAAC,cAAC2G,EAAA,EAAD,CACI4M,UAAWhC,GACXhJ,MAAM,YACNU,QAAQ,WACRsE,UAAWb,EAAA3M,EAAAC,cAACwT,EAAAzT,EAAD,MACX+J,QAAS,kBAAMwG,GAAyBrC,EAAoB,YALhE,oBASJvB,EAAA3M,EAAAC,cAAC+R,EAAA,EAAD,CAAMgB,MAAI,EAAC9S,UAAWC,IAAIyG,QACtB+F,EAAA3M,EAAAC,cAAC2G,EAAA,EAAD,CAAQsC,QAAQ,WAAWV,MAAM,UAAUuB,QA3OzC,WAClBqF,IAAgB,KA0OA,OAGAzC,EAAA3M,EAAAC,cAACyT,EAAA,EAAD,CAAQxG,KAAMiC,GAAcvG,QA1OzB,WACnBwG,IAAgB,IAyOqDuE,kBAAgB,qBACjEhH,EAAA3M,EAAAC,cAAC2T,EAAA,EAAD,CAAanH,GAAG,qBAAhB,OACAE,EAAA3M,EAAAC,cAAC4T,EAAA,EAAD,KACIlH,EAAA3M,EAAAC,cAAC6T,EAAA,EAAD,2CAGAnH,EAAA3M,EAAAC,cAAC8T,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACPxH,GAAG,OACHsG,MAAM,aACN5I,KAAK,OACL+J,WAAS,EACTrB,SAnPZ,SAACsB,GACjB3E,GAAc2E,EAAE9D,OAAOpJ,WAqPH0F,EAAA3M,EAAAC,cAACmU,EAAA,EAAD,KACIzH,EAAA3M,EAAAC,cAAC2G,EAAA,EAAD,CAAQmD,QAnPT,WACvBqF,IAAgB,GACS,GAArBG,GAAW1O,QAIfwN,EAAakB,IACbC,GAAc,KAJVrO,QAAQC,IAAI,sBAgP6CoH,MAAM,WAA3C,WAQfmH,IACGhD,EAAA3M,EAAAC,cAACoU,EAAA,EAAD,CAAOrL,SAAS,QAAQJ,QAAS,WAAQgH,IAAcD,MACnDhD,EAAA3M,EAAAC,cAACgF,EAAA,EAAD,KAAY0H,EAAA3M,EAAAC,cAAA,wBADhB,8DAGM8P,GAAUlP,OAAS,EAChBkP,GAAUuE,MAAM,KAAKpC,IAAI,SAACzF,EAAIpJ,GAC3B,OAAOsJ,EAAA3M,EAAAC,cAACsU,EAAA,EAAD,CAAY1S,IAAK4K,EAAIvD,QAAQ,QAAQ3D,UAAU,MAAMiP,MAAM,QAC9D7H,EAAA3M,EAAAC,cAAA,4BAAoBwM,GAAYE,EAAA3M,EAAAC,cAAA,kBAIxC,IAKZ0M,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAI8F,MAChB0G,EAAA3M,EAAAC,cAAA,OAAKC,UAAWuR,GAAuBP,KAAK,MACxCvE,EAAA3M,EAAAC,cAAC2S,EAAA,EAAD,CACIpK,MAAM,UAENqK,SAvMN,WACd,IAAMtR,EAAUN,YAAgBiN,GAChCc,EAAsBzN,IAsMFuR,QAASzR,KACbsL,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAIkG,aAApB,OACEwI,GAAWD,IACTjC,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAImG,QAApB,WAEFoI,GACE/B,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAIoG,OAApB,SAEHsI,GACGlC,EAAA3M,EAAAC,cAAA,OAAKC,UAAWC,IAAIuG,OAApB,UAKPgL","file":"js/5.17f45d91.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport css from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator = () => (\r\n    <div className={css.Loading_Indicator}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading_Indicator\":\"LoadingIndicator_Loading_Indicator__1KMH5\"};","// Sets all properties of an object to FALSE\nexport const isAllTrue = (obj: Object) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (value === false) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const toggleSelectAll = (obj: Object, allTrue: Boolean) => {\n    for (const [key, value] of Object.entries(obj)) {\n        if (allTrue) {\n            obj[key] = false\n        } else {\n            obj[key] = true\n        }\n    }\n};\n\nexport const handleSelectAll = (selectedItems: Object) => {\n    console.log(\"handleSelectAll(), selectedItems:\");\n    console.log(selectedItems);\n    const allTrue = isAllTrue(selectedItems);\n    console.log(`allTrue: ${allTrue}`);\n    const updated = { ...selectedItems };\n    toggleSelectAll(updated, allTrue);\n    console.log(\"updated:\");\n    console.log(updated);\n\n    return updated\n};\n\nexport const isSelectedAny = (selectedItems: Object) => {\n    console.log(\"isSelectedAny()\");\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            return true\n        }\n    }\n\n    return false;\n};\n\nexport const isSelectedOne = (selectedItems: Object) => {\n    let count = 0;\n\n    for (const [key, value] of Object.entries(selectedItems)) {\n        if (value === true) {\n            count++;\n        }\n    }\n\n    return count === 1;\n};\n\nexport const extractIds = (items: Object) => {\n    const imageIds = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            imageIds.push(key);\n        }\n    }\n    return imageIds;\n};\n\nexport const extractSelected = (items) => {\n    const selectedItems = [];\n    for (const [key, value] of Object.entries(items)) {\n        if (value === true) {\n            selectedItems.push(key);\n        }\n    }\n    return selectedItems;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Containers\":\"Containers_Containers__39DWN\",\"Wrapper\":\"Containers_Wrapper__111Ho\",\"Info\":\"Containers_Info__1vsEp\",\"Content\":\"Containers_Content__3VqKZ\",\"Buttons\":\"Containers_Buttons__2rM_y\",\"Heading\":\"Containers_Heading__2lDml\",\"ContainerId\":\"Containers_ContainerId__ipn14\",\"Status\":\"Containers_Status__1_Csz\",\"Image\":\"Containers_Image__21WKf\",\"Command\":\"Containers_Command__1fcDN\",\"Created\":\"Containers_Created__mGTAP\",\"Ports\":\"Containers_Ports__3atHh\",\"Names\":\"Containers_Names__LFSGf\",\"Button\":\"Containers_Button__1BVjV\",\"DetailTitle\":\"Containers_DetailTitle__ZQRo-\",\"Headline\":\"Containers_Headline__1w84O\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\"\n}), 'Pageview');\n\nexports.default = _default;","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import React, { useState } from 'react';\n\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { Link } from 'react-router-dom';\n\n\nconst MenuContainers = props => {\n    const { containerId, containerOperation } = props\n    // const { containerId, removeContainer, stopContainer, killContainer } = props\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const id = {};\n    id[containerId] = true;\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"secondary\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Actions\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <Link to={`/container_logs/${containerId}`} style={{ textDecoration: 'none', marginLeft: '2.5%' }}>\n                    <Button\n                        startIcon={<PageviewIcon />}\n                        onClick={() => console.log(`clicked ID: ${containerId}`)}>\n                        Show Logs\n                    </Button>\n                </Link>\n                <MenuItem onClick={() => containerOperation(id, \"remove\")}>Remove</MenuItem>\n                <MenuItem onClick={() => containerOperation(id, \"stop\")}>Stop</MenuItem>\n                <MenuItem onClick={() => containerOperation(id, \"kill\")}>Kill</MenuItem>\n                <MenuItem onClick={handleClose}>Close</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n\nexport default MenuContainers;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport * as actions from '../../store/actions/index';\nimport { AppState } from '../../store';\n\nimport css from './Containers.module.css';\nimport LoadingIndicator from '../../components/UI/LoadingIndicator/LoadingIndicator';\nimport { Container } from '../../models/Models';\n\nimport { isAllTrue, handleSelectAll, isSelectedAny, extractSelected } from '../../helpers/helpers';\n\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DeleteIcon from '@material-ui/icons/Delete';\n// import PageviewIcon from '@material-ui/icons/Pageview';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import { Link } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n// import { withStyles } from '@material-ui/core/styles';\n// import Menu, { MenuProps } from '@material-ui/core/Menu';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import DraftsIcon from '@material-ui/icons/Drafts';\n// import SendIcon from '@material-ui/icons/Send';\n\n// import Menu from '@material-ui/core/Menu';\n// import MenuItem from '@material-ui/core/MenuItem';\n\nimport MenuContainers from '../../components/MaterialCustomized/MenuContainers';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Typography } from '@material-ui/core';\n\nimport { useViewport } from '../../Viewport';\n\n\ninterface IContainersProps {\n    containers: Container[],\n    loading: boolean,\n    fetchContainers: Function,\n    removeContainers: Function,\n    stopContainers: Function,\n    killContainers: Function,\n    containerRun: Function,\n\n    containersDataTest: Container[]\n}\n\nconst Containers = (props: IContainersProps) => {\n    const { fetchContainers, removeContainers, stopContainers, killContainers, containerRun, containers } = props;\n    const { width, phone, tabletPortrait, tabletLandscape, desktop } = useViewport();\n    console.log(`width=${width}, phone=${phone}, tabletPortrait=${tabletPortrait}, tabletLandscape=${tabletLandscape}, desktop=${desktop}`);\n\n    const defaultSelectedContainers = {};\n\n    for (const [key, value] of Object.entries(containers)) {\n        defaultSelectedContainers[value.containerId] = false\n    }\n\n    const [selectedContainers, setSelectedContainers] = useState<any>({ ...defaultSelectedContainers });\n    const [openRunModal, setOpenRunModal] = useState(false);\n    const [runCommand, setRunCommand] = useState(\"\");\n    const [showError, setShowError] = useState<boolean>(false);\n    const [errorInfo, setErrorInfo] = useState<string>(\"\");\n\n    const allTrue = isAllTrue(selectedContainers);\n\n    useEffect(() => {\n        fetchContainers();\n    }, [fetchContainers]);\n\n    useEffect(() => {\n        console.log(\"useEffect [containers]\");\n        const newSelected = {};\n        for (const [key, value] of Object.entries(containers)) {\n            newSelected[value.containerId] = false\n        }\n        setSelectedContainers({ ...newSelected });\n    }, [containers]);\n\n    const handleRunOpen = () => {\n        setOpenRunModal(true);\n    };\n\n    const handleRunClose = () => {\n        setOpenRunModal(false);\n    };\n\n    const onChangeRun = (e) => {\n        setRunCommand(e.target.value);\n    };\n\n    const handleContainerRun = () => {\n        setOpenRunModal(false);\n        if (runCommand.length == 0) {\n            console.log(\"empty run command\");\n            return;\n        }\n        containerRun(runCommand);\n        setRunCommand('');\n    };\n\n    const handleCheckboxChange = changeEvent => {\n        const { id } = changeEvent.target;\n        const old = { ...selectedContainers };\n\n        for (const [key, value] of Object.entries(old)) {\n            if (id === key) {\n                old[key] = !old[key];\n            }\n        }\n\n        setSelectedContainers(old);\n    };\n\n    const handleRemoveContainers = (selectedContainers, containerIds) => {\n        console.log(\"handleRemoveContainers()\");\n        let runningContainersIds = [];\n        containers.forEach((container) => {\n            console.log(`status: ${container.status}`);\n            if ((selectedContainers[container.containerId] === true) && (container.status.startsWith('Up '))) {\n                runningContainersIds.push(container.containerId);\n            }\n        });\n\n        if (runningContainersIds.length > 0) {\n            console.log(\"SELECTION INVALID - there are running containers\");\n            setShowError(true);\n            runningContainersIds = [...new Set(runningContainersIds)];\n            setErrorInfo(runningContainersIds.join(\" \"));\n        } else {\n            console.log(\"Ready for deletion\");\n            removeContainers(containerIds);\n        }\n    };\n\n    // Function to handle various container operations, ready to be used for \"all\" containers as well\n    const handleContainerOperation = (selectedContainers, mode: string) => {\n        console.log(`triggered handleContainerOperation(), mode: ${mode}`);\n        const containerIds = extractSelected(selectedContainers);\n\n        switch (mode.toLowerCase()) {\n            case \"remove\":\n                handleRemoveContainers(selectedContainers, containerIds);\n                break;\n            case \"stop\":\n                stopContainers(containerIds);\n                break;\n            case \"kill\":\n                killContainers(containerIds);\n                break;\n            default: console.log(\"Unknown operation!\");\n        }\n\n        const updated = { ...selectedContainers };\n\n        for (const [key, value] of Object.entries(updated)) {\n            if (value === true) {\n                updated[key] = false\n            }\n        }\n\n        setSelectedContainers(updated);\n    };\n\n    const selectAll = () => {\n        const updated = handleSelectAll(selectedContainers);\n        setSelectedContainers(updated);\n    };\n\n    console.log(\"selectedContainers OUTSIDE:\");\n    console.log(selectedContainers);\n    console.log(\"containers prop OUTSIDE:\");\n    console.log(containers);\n    const isSelected = isSelectedAny(selectedContainers);\n\n    const containersTitleClasses = [css.Content, css.Heading];\n    const useStyles = makeStyles({\n        buttonGroup: {\n            alignSelf: \"flex-start\"\n        }\n    });\n    const classes = useStyles();\n\n    let content = <div className={css.Wrapper}><LoadingIndicator /></div>\n\n    if (!props.loading) {\n        content = <Grid container direction=\"column\">\n            {(containers && containers.length) ?\n                (containers.map((container, i) => {\n                    console.log(\">> containers.map\");\n                    console.log(\"container:\");\n                    console.log(container);\n                    console.log(container.containerId);\n                    console.log(selectedContainers[container.containerId]);\n                    console.log(\"<<\");\n                    return <React.Fragment key={container.containerId}>\n\n                        <Accordion>\n\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                            >\n                                <FormControlLabel\n                                    aria-label=\"Acknowledge\"\n                                    onClick={(event) => event.stopPropagation()}\n                                    onFocus={(event) => event.stopPropagation()}\n                                    control={<Checkbox\n                                        color=\"primary\"\n                                        // onClick={handleCheckboxChange}\n                                        onChange={handleCheckboxChange}\n                                        // id={container.containerId}\n                                        id={\"123\"}\n                                        checked={selectedContainers[container.containerId]} />}\n                                    // label=\"Select\"\n                                    label=\"\"\n                                />\n                                <Grid item container className={css.Content}>\n                                    <Tooltip title={container.containerId}>\n                                        <Grid className={css.ContainerId}>{container.containerId}</Grid>\n                                    </Tooltip>\n                                    {(desktop || tabletLandscape) &&\n                                        <Tooltip title={container.status}>\n                                            <Grid className={css.Status}>{container.status}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {!phone &&\n                                        <Tooltip title={container.image}>\n                                            <Grid className={css.Image}>{container.image}</Grid>\n                                        </Tooltip>\n                                    }\n                                    {desktop &&\n                                        <Tooltip title={container.ports}>\n                                            <Grid className={css.Ports}>{container.ports}</Grid>\n                                        </Tooltip>\n                                    }\n\n                                    <FormControlLabel\n                                        aria-label=\"Acknowledge\"\n                                        onClick={(event) => event.stopPropagation()}\n                                        onFocus={(event) => event.stopPropagation()}\n                                        control={<MenuContainers\n                                            containerId={container.containerId}\n                                            containerOperation={handleContainerOperation}\n                                        // removeContainer={handleRemoveContainers}\n                                        // stopContainer={handleStopContainers}\n                                        // killContainer={handleKillContainers}\n                                        />}\n                                        // label=\"Select\"\n                                        label=\"\"\n                                    />\n                                </Grid>\n                            </AccordionSummary>\n\n                            <AccordionDetails>\n                                <Grid container direction=\"column\">\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Names:</Grid>\n                                        <Grid className={css.Names}>{container.names}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Created:</Grid>\n                                        <Grid className={css.Created}>{container.created}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Command:</Grid>\n                                        <Grid className={css.Command}>{container.command}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Ports:</Grid>\n                                        <Grid className={css.Ports}>{container.ports}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Image:</Grid>\n                                        <Grid className={css.Image}>{container.image}</Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\">\n                                        <Grid className={css.DetailTitle}>Status:</Grid>\n                                        <Grid className={css.Status}>{container.status}</Grid>\n                                    </Grid>\n                                </Grid>\n\n                            </AccordionDetails>\n\n                        </Accordion>\n\n                    </React.Fragment>\n\n                }))\n                :\n                ''\n            }\n        </Grid>\n    }\n\n    return (\n        <div className={css.Containers}>\n            <div className={css.Wrapper}>\n                <h1 className={css.Headline}>Podman Containers</h1>\n                <p>Showing information about Containers and offering various operations with them</p>\n                <Grid container className={css.Buttons}>\n                    <Grid item className={css.Button}>\n                        <Button\n                            disabled={!isSelected}\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            startIcon={<DeleteIcon />}\n                            onClick={() => handleContainerOperation(selectedContainers, \"remove\")}>\n                            Remove Selected\n                        </Button>\n                    </Grid>\n                    <Grid item className={css.Button}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleRunOpen}>\n                            Run\n                        </Button>\n                        <Dialog open={openRunModal} onClose={handleRunClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">Run</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Enter the command for \"podman run\"\n                            </DialogContentText>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Podman Run\"\n                                    type=\"text\"\n                                    fullWidth\n                                    onChange={onChangeRun}\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleContainerRun} color=\"primary\">\n                                    Run\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Grid>\n\n                {showError &&\n                    <Alert severity=\"error\" onClose={() => { setShowError(!showError) }}>\n                        <AlertTitle><strong>Error</strong></AlertTitle>\n                        The following containers are running and cannot be removed:\n                        {(errorInfo.length > 0) ?\n                            (errorInfo.split(' ').map((id, i) => {\n                                return <Typography key={id} variant=\"body1\" component=\"div\" align=\"left\">\n                                    <strong>container: {id}</strong><strong></strong>\n                                </Typography>\n                            }))\n                            :\n                            ''\n                        }\n                    </Alert>\n                }\n\n                <div className={css.Info}>\n                    <div className={containersTitleClasses.join(' ')}>\n                        <Checkbox\n                            color=\"primary\"\n                            // onClick={selectAll}\n                            onChange={selectAll}\n                            checked={allTrue} />\n                        <div className={css.ContainerId}>ID</div>\n                        {(desktop || tabletLandscape) &&\n                            <div className={css.Status}>Status</div>\n                        }\n                        {!phone &&\n                            <div className={css.Image}>Image</div>\n                        }\n                        {desktop &&\n                            <div className={css.Ports}>Ports</div>\n                        }\n                        {/* <div className={css.Command}>Command</div> */}\n                        {/* <div className={css.Created}>Created</div> */}\n                    </div>\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        containers: state.containers.containers,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    return {\n        fetchContainers: () =>\n            dispatch(actions.fetchContainers()),\n        removeContainers: (selectedContainers) =>\n            dispatch(actions.removeContainers(selectedContainers)),\n        stopContainers: (selectedContainers) =>\n            dispatch(actions.stopContainers(selectedContainers)),\n        killContainers: (selectedContainers) =>\n            dispatch(actions.killContainers(selectedContainers)),\n        containerRun: (command) =>\n            dispatch(actions.containerRun(command))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Containers);\n"],"sourceRoot":""}